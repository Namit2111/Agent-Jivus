Automation API | Automation v4 API (BETA) | HubSpot
×
close
We use cookies to improve HubSpot’s site. Some cookies are necessary for our website and services to function properly. Other cookies are optional and help personalize your experience, including advertising and analytics. You can consent to all cookies, decline all optional cookies, or manage optional cookies. Without a selection, our default cookie settings will apply. You can change your preferences at any time. To learn more, check out our
Cookie Policy
.
Accept all
Decline all
Manage cookies
Skip to main content
HubSpot logo
Open site navigation
Getting Started
Overview
What to build
Tools to help you build
Account types
Guides
API & Reference
API Endpoints
CMS Reference
UI Components
(Beta)
Search
Select a language
English
My account
API Guides
Apps
CMS Development
UI Customization
(Beta)
On this page
Fetch specific workflow by ID
Action types
Action type IDs
Action fields
Delay until a specific date or date-based property
Delay a set amount of time
Send an automated marketing email to an enrolled contact
Set property
Create task
Create a new record
Add an enrolled object to a static list
Branching actions
List branch actions
Static branch actions
Enrollment criteria
Event-based enrollment
Filter-based enrollment
Create a workflow
Delete a workflow
API Guides
Automation
Automation API | Automation v4 API (BETA)
Automation v4 API (BETA)
You can use the automation v4 API to fetch data from existing
workflows
, create new workflows, as well as delete workflows you no longer need.
The sections below provide a walkthrough of how to use the v4 endpoints. For a full reference of the available endpoints and their required fields, click the
Endpoints
tab at the top of this article.
Please note
: This API is currently in beta and is subject to change based on testing and feedback. By using these endpoints you agree to adhere to HubSpot's
Developer Terms
&
Developer Beta Terms
. You also acknowledge and understand the risk associated with testing an unstable API.
Fetch specific workflow by ID
To fetch data from an existing workflow, make a
GET
request to
/automation/v4/flows/{flowId}
, where flowId is the ID an existing workflow in your account.
For example, if you made a
GET
request to
/automation/v4/flows/585051946
to get the workflow with an ID of
585051946
, the resulting response would be:
Copy code snippet
// Example workflow response from GET request to /automations/v4/flows/585051946
{
"id": "585051946",
"isEnabled": true,
"flowType": "WORKFLOW",
"revisionId": "7",
"name": "New form submission workflow",
"createdAt": "2024-06-07T17:27:08.101Z",
"updatedAt": "2024-06-07T17:31:11.263Z",
"startActionId": "1",
"nextAvailableActionId": "3",
"actions": [
{
"type": "SINGLE_CONNECTION",
"actionId": "1",
"actionTypeVersion": 0,
"actionTypeId": "0-13",
"connection": {
"edgeType": "STANDARD",
"nextActionId": "2"
},
"fields": {
"operation": "ADD",
"list_id": "178"
}
},
{
"type": "SINGLE_CONNECTION",
"actionId": "2",
"actionTypeVersion": 0,
"actionTypeId": "0-9",
"fields": {
"user_ids": ["2620022"],
"delivery_method": "APP",
"subject": "New form submission",
"body": "Check out the new form submission we received!"
}
}
],
"enrollmentCriteria": {
"shouldReEnroll": false,
"type": "EVENT_BASED",
"eventFilterBranches": [
{
"filterBranches": [],
"filters": [],
"eventTypeId": "4-1639801",
"operator": "HAS_COMPLETED",
"filterBranchType": "UNIFIED_EVENTS",
"filterBranchOperator": "AND"
}
],
"listMembershipFilterBranches": []
},
"timeWindows": [],
"blockedDates": [],
"customProperties": {},
"crmObjectCreationStatus": "COMPLETE",
"type": "CONTACT_FLOW",
"objectTypeId": "0-1",
"suppressionListIds": [],
"canEnrollFromSalesforce": false
}
1
// Example workflow response from GET request to /automations/v4/flows/585051946
2
{
3
"id"
:
"585051946"
,
4
"isEnabled"
:
true
,
5
"flowType"
:
"WORKFLOW"
,
6
"revisionId"
:
"7"
,
7
"name"
:
"New form submission workflow"
,
8
"createdAt"
:
"2024-06-07T17:27:08.101Z"
,
9
"updatedAt"
:
"2024-06-07T17:31:11.263Z"
,
10
"startActionId"
:
"1"
,
11
"nextAvailableActionId"
:
"3"
,
12
"actions"
: [
13
{
14
"type"
:
"SINGLE_CONNECTION"
,
15
"actionId"
:
"1"
,
16
"actionTypeVersion"
:
0
,
17
"actionTypeId"
:
"0-13"
,
18
"connection"
: {
19
"edgeType"
:
"STANDARD"
,
20
"nextActionId"
:
"2"
21
},
22
"fields"
: {
23
"operation"
:
"ADD"
,
24
"list_id"
:
"178"
25
}
26
},
27
{
28
"type"
:
"SINGLE_CONNECTION"
,
29
"actionId"
:
"2"
,
30
"actionTypeVersion"
:
0
,
31
"actionTypeId"
:
"0-9"
,
32
"fields"
: {
33
"user_ids"
: [
"2620022"
],
34
"delivery_method"
:
"APP"
,
35
"subject"
:
"New form submission"
,
36
"body"
:
"Check out the new form submission we received!"
37
}
38
}
39
],
40
"enrollmentCriteria"
: {
41
"shouldReEnroll"
:
false
,
42
"type"
:
"EVENT_BASED"
,
43
"eventFilterBranches"
: [
44
{
45
"filterBranches"
: [],
46
"filters"
: [],
47
"eventTypeId"
:
"4-1639801"
,
48
"operator"
:
"HAS_COMPLETED"
,
49
"filterBranchType"
:
"UNIFIED_EVENTS"
,
50
"filterBranchOperator"
:
"AND"
51
}
52
],
53
"listMembershipFilterBranches"
: []
54
},
55
"timeWindows"
: [],
56
"blockedDates"
: [],
57
"customProperties"
: {},
58
"crmObjectCreationStatus"
:
"COMPLETE"
,
59
"type"
:
"CONTACT_FLOW"
,
60
"objectTypeId"
:
"0-1"
,
61
"suppressionListIds"
: [],
62
"canEnrollFromSalesforce"
:
false
63
}
The response above includes the specification for a contact-based workflow with two actions, and contacts are enrolled if they filled out a form on your website.
You can consult the sections below on how actions and enrollment criteria are specified.
Action types
Each workflow specification consists of a list of actions. Each action contains a set of required properties:
actionId
: a unique ID that identifies this action, provided as a string.
actionTypeId
: a predefined value that specifies the action type (e.g.,
"0-1"
designates a
DELAY
action). A full list of actions and their associated
actionTypeId
is provided in the section below.
actionTypeVersion
: a number that designates the version of the action. For all built-in action types (e.g., a delay, email notification, etc.), the
actionTypeVersion
will be
0
.
connection
: for non-branching actions, this property is an object that specifies the subsequent action, and contains two nested properties:
edgeType
: to proceed directly to the next action, this property should be set to
"STANDARD"
. If you have a branch in your workflow, you can go to an action in a different branch by setting the
edgeType
to
"GO-TO"
.
nextActionId
: the ID of the subsequent action in the workflow.
type
: for non-branching actions, this should be set to
SINGLE_CONNECTION
.
fields
: an object that specifies the data required by the action (e.g., how long to delay an enrolled object for a
DELAY
action). The structure of this property depends on the action type. Consult the sections and example actions below for the fields each action type expects.
Action type IDs
The table below details the available action types along with the associated
actionTypeId
:
Action
Action type ID
Description
Delay until a specific date or date-based property
0-35
Delay until a preconfigured calendar date or date property of the enrolled record.
Delay a set amount of time, until a specific day of the week, or time of day.
0-1
Delay for a preconfigured amount of time (e.g., 3 hours, 5 days, etc.), until a specific day (e.g., Tuesday), or time of day (12:00 AM EST).
Add enrolled object to list or remove from list
0-13
Add or remove an enrolled contact to/from a static list.
Send automated email to a contact associated with the enrolled record
0-4
Send an automated marketing email to the enrolled record.
Send email notification to a user or team
0-8
Send an internal email notification to a user or team in your account.
Send an in-app notification to a user or team
0-9
Trigger an in-app notification to a user or team in your account.
Set property
0-5
Set a property on an enrolled object.
Create task
0-3
Create a new task.
Create a new record
0-14
Create a new record (contact, company, deal, ticket, or lead).
Action fields
The
fields
property of your action depends on the corresponding action type.
The actions available depend on your account subscription. Learn about all available actions in
this knowledge base article
.
To confirm the fields required for a specific action, you can
create the workflow
with that action using the workflows tool, then make a
GET
request to
/automations/v4/flows/{flowId}
for that workflow. You can find the
flowId
of the workflow by editing the workflow then checking the URL for the second ID in the URL path, or you can make a
GET
request to
/automations/v4/flows
to get all workflows and filter the resulting response by the name of your workflow.
The sections below outline the required fields for common actions in a workflow.
Delay until a specific date or date-based property
The code below specifies an example delay action until a specific date. Based on whether you're delaying until a preconfigured date or a date-based property of the enrolled record, you'll need to specify the sub-properties of the
date
field accordingly:
If you're delaying until a specific calendar date, provide
STATIC_VALUE
for the
type
sub-property, then provide the calendar date for the
staticValue
sub-property as a unix timestamp.
To delay until a date-based property of the enrolled record, provide
OBJECT_PROPERTY
for the
type
sub-property, then specify the property to use as the
propertyName
.
Copy code snippet
// Example of a delay action to delay until a specific date or date-based property
{
"type": "SINGLE_CONNECTION",
"actionId": "5",
"actionTypeVersion": 0,
"actionTypeId": "0-35",
"connection": {
"edgeType": "STANDARD",
"nextActionId": "7"
},
"fields": {
"date": {
"type": "STATIC_VALUE",
"staticValue": "1719446400000"
},
"delta": "0",
"time_unit": "DAYS",
"time_of_day": {
"hour": 12,
"minute": 0
}
}
}
xxxxxxxxxx
23
1
// Example of a delay action to delay until a specific date or date-based property
2
{
3
"type"
:
"SINGLE_CONNECTION"
,
4
"actionId"
:
"5"
,
5
"actionTypeVersion"
:
0
,
6
"actionTypeId"
:
"0-35"
,
7
"connection"
: {
8
"edgeType"
:
"STANDARD"
,
9
"nextActionId"
:
"7"
10
},
11
"fields"
: {
12
"date"
: {
13
"type"
:
"STATIC_VALUE"
,
14
"staticValue"
:
"1719446400000"
15
},
16
"delta"
:
"0"
,
17
"time_unit"
:
"DAYS"
,
18
"time_of_day"
: {
19
"hour"
:
12
,
20
"minute"
:
0
21
}
22
}
23
}
Delay a set amount of time
The code below specifies an example delay action for a preconfigured amount of time.
Copy code snippet
// Example of a delay action to delay for a specific amount of time (e.g., 6 hours)
{
"type": "SINGLE_CONNECTION",
"actionId": "5",
"actionTypeVersion": 0,
"actionTypeId": "0-35",
"connection": {
"edgeType": "STANDARD",
"nextActionId": "7"
},
"fields": {
"delta": "720",
"time_unit": "MINUTES"
}
}
xxxxxxxxxx
15
1
// Example of a delay action to delay for a specific amount of time (e.g., 6 hours)
2
{
3
"type"
:
"SINGLE_CONNECTION"
,
4
"actionId"
:
"5"
,
5
"actionTypeVersion"
:
0
,
6
"actionTypeId"
:
"0-35"
,
7
"connection"
: {
8
"edgeType"
:
"STANDARD"
,
9
"nextActionId"
:
"7"
10
},
11
"fields"
: {
12
"delta"
:
"720"
,
13
"time_unit"
:
"MINUTES"
14
}
15
}
Send an automated marketing email to an enrolled contact
The following example action demonstrates how to send an automated marketing email with an ID of
113782603056
to an enrolled contact.
Copy code snippet
// Example action to send an automated marketing email to an enrolled contact
{
"type": "SINGLE_CONNECTION",
"actionId": "4",
"actionTypeVersion": 0,
"actionTypeId": "0-4",
"fields": {
"content_id": "113782603056"
}
}
xxxxxxxxxx
10
1
// Example action to send an automated marketing email to an enrolled contact
2
{
3
"type"
:
"SINGLE_CONNECTION"
,
4
"actionId"
:
"4"
,
5
"actionTypeVersion"
:
0
,
6
"actionTypeId"
:
"0-4"
,
7
"fields"
: {
8
"content_id"
:
"113782603056"
9
}
10
}
Set property
The action definition below provides an example of setting the
hs_lead_status
property to
"IN_PROGRESS"
.
Copy code snippet
// Example action to set the hs_lead_status property to IN_PROGRESS
{
"actionId": "2",
"actionTypeVersion": 0,
"actionTypeId": "0-5",
"connection": {
"edgeType": "STANDARD",
"nextActionId": "4"
},
"fields": {
"property_name": "hs_lead_status",
"association": {
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 1
},
"value": {
"staticValue": "IN_PROGRESS"
}
}
}
xxxxxxxxxx
20
1
// Example action to set the hs_lead_status property to IN_PROGRESS
2
{
3
"actionId"
:
"2"
,
4
"actionTypeVersion"
:
0
,
5
"actionTypeId"
:
"0-5"
,
6
"connection"
: {
7
"edgeType"
:
"STANDARD"
,
8
"nextActionId"
:
"4"
9
},
10
"fields"
: {
11
"property_name"
:
"hs_lead_status"
,
12
"association"
: {
13
"associationCategory"
:
"HUBSPOT_DEFINED"
,
14
"associationTypeId"
:
1
15
},
16
"value"
: {
17
"staticValue"
:
"IN_PROGRESS"
18
}
19
}
20
}
Create task
The action definition below is an example of creating an unassigned task:
Copy code snippet
// Example action definition for creating a new unassigned task
{
"type": "SINGLE_CONNECTION",
"actionId": "1",
"actionTypeVersion": 0,
"actionTypeId": "0-3",
"fields": {
"task_type": "TODO",
"subject": "Check in with lead",
"body": "<p>Remember to sync up with new lead!</p>",
"associations": [
{
"target": {
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 10
},
"value": {
"type": "ENROLLED_OBJECT"
}
}
],
"use_explicit_associations": "true",
"priority": "NONE"
}
}
xxxxxxxxxx
25
1
// Example action definition for creating a new unassigned task
2
{
3
"type"
:
"SINGLE_CONNECTION"
,
4
"actionId"
:
"1"
,
5
"actionTypeVersion"
:
0
,
6
"actionTypeId"
:
"0-3"
,
7
"fields"
: {
8
"task_type"
:
"TODO"
,
9
"subject"
:
"Check in with lead"
,
10
"body"
:
"<p>Remember to sync up with new lead!</p>"
,
11
"associations"
: [
12
{
13
"target"
: {
14
"associationCategory"
:
"HUBSPOT_DEFINED"
,
15
"associationTypeId"
:
10
16
},
17
"value"
: {
18
"type"
:
"ENROLLED_OBJECT"
19
}
20
}
21
],
22
"use_explicit_associations"
:
"true"
,
23
"priority"
:
"NONE"
24
}
25
}
Create a new record
The example action below creates a new deal and associates it with the contact enrolled in the workflow:
Copy code snippet
// Example action definition for creating a new deal and associating it with the enrolled contact
{
"type": "SINGLE_CONNECTION",
"actionId": "2",
"actionTypeVersion": 0,
"actionTypeId": "0-14",
"connection": {
"edgeType": "STANDARD",
"nextActionId": "3"
},
"fields": {
"object_type_id": "0-3",
"properties": [
{
"targetProperty": "dealstage",
"value": {
"type": "STATIC_VALUE",
"staticValue": "appointmentscheduled"
}
},
{
"targetProperty": "dealname",
"value": {
"type": "STATIC_VALUE",
"staticValue": "New deal"
}
},
{
"targetProperty": "amount",
"value": {
"type": "STATIC_VALUE",
"staticValue": "1000"
}
}
],
"associations": [
{
"target": {
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 3
},
"value": {
"type": "ENROLLED_OBJECT"
}
}
],
"use_explicit_associations": "true"
}
}
xxxxxxxxxx
49
1
// Example action definition for creating a new deal and associating it with the enrolled contact
2
{
3
"type"
:
"SINGLE_CONNECTION"
,
4
"actionId"
:
"2"
,
5
"actionTypeVersion"
:
0
,
6
"actionTypeId"
:
"0-14"
,
7
"connection"
: {
8
"edgeType"
:
"STANDARD"
,
9
"nextActionId"
:
"3"
10
},
11
"fields"
: {
12
"object_type_id"
:
"0-3"
,
13
"properties"
: [
14
{
15
"targetProperty"
:
"dealstage"
,
16
"value"
: {
17
"type"
:
"STATIC_VALUE"
,
18
"staticValue"
:
"appointmentscheduled"
19
}
20
},
21
{
22
"targetProperty"
:
"dealname"
,
23
"value"
: {
24
"type"
:
"STATIC_VALUE"
,
25
"staticValue"
:
"New deal"
26
}
27
},
28
{
29
"targetProperty"
:
"amount"
,
30
"value"
: {
31
"type"
:
"STATIC_VALUE"
,
32
"staticValue"
:
"1000"
33
}
34
}
35
],
36
"associations"
: [
37
{
38
"target"
: {
39
"associationCategory"
:
"HUBSPOT_DEFINED"
,
40
"associationTypeId"
:
3
41
},
42
"value"
: {
43
"type"
:
"ENROLLED_OBJECT"
44
}
45
}
46
],
47
"use_explicit_associations"
:
"true"
48
}
49
}
Add an enrolled object to a static list
The following action definition is an example of adding an enrolled contact to a static list, specified as the
list_id
. To remove an enrolled object from a list, switch the
operation
property to
"REMOVE"
.
Copy code snippet
// Example action to add an enrolled contact to a list
{
"type": "SINGLE_CONNECTION",
"actionId": "4",
"actionTypeVersion": 0,
"actionTypeId": "0-13",
"fields": {
"operation": "ADD",
"list_id": "178"
}
}
xxxxxxxxxx
11
1
// Example action to add an enrolled contact to a list
2
{
3
"type"
:
"SINGLE_CONNECTION"
,
4
"actionId"
:
"4"
,
5
"actionTypeVersion"
:
0
,
6
"actionTypeId"
:
"0-13"
,
7
"fields"
: {
8
"operation"
:
"ADD"
,
9
"list_id"
:
"178"
10
}
11
}
Branching actions
Branching actions differ from other actions in that they don't follow the standard action structure. Branching action definitions don't have
fields
or
connection
properties. There are two types of branching actions: list branch actions and static branch actions. Both types must also define a default branch using the
defaultBranchName
and
defaultBranch
properties.
List branch actions
List branch actions include a
listBranches
property that specifies a set of filter branches to segment enrolled objects. Each
filterBranch
is configured using the syntax and formatting outlined in the
list filters documentation
.
Copy code snippet
// Example list branch action
{
"actionId": "6",
"listBranches": [
{
"filterBranch": {},
"connection": {
"edgeType": "STANDARD",
"nextActionId": "7"
}
},
{
"filterBranch": {},
"branchName": "Some branch name",
"connection": {
"edgeType": "GOTO",
"nextActionId": "4"
}
}
],
"defaultBranchName": "Fall-through branch",
"defaultBranch": {
"edgeType": "STANDARD",
"nextActionId": "8"
}
}
xxxxxxxxxx
26
1
// Example list branch action
2
{
3
"actionId"
:
"6"
,
4
"listBranches"
: [
5
{
6
"filterBranch"
: {},
7
"connection"
: {
8
"edgeType"
:
"STANDARD"
,
9
"nextActionId"
:
"7"
10
}
11
},
12
{
13
"filterBranch"
: {},
14
"branchName"
:
"Some branch name"
,
15
"connection"
: {
16
"edgeType"
:
"GOTO"
,
17
"nextActionId"
:
"4"
18
}
19
}
20
],
21
"defaultBranchName"
:
"Fall-through branch"
,
22
"defaultBranch"
: {
23
"edgeType"
:
"STANDARD"
,
24
"nextActionId"
:
"8"
25
}
26
}
Static branch actions
Static branch actions include an
inputValue
definition, which supports different shapes for the input values of the branch. It also includes a list of
staticBranches
, which defines which actions come next in the branch.
Copy code snippet
// Example static branch action
{
"actionId": "1",
"inputValue": {
"propertyName": "example_property"
},
"staticBranches": [
{
"branchValue": "example_value_1",
"connection": {
"edgeType": "STANDARD",
"nextActionId": "2"
}
},
{
"branchValue": "example_value_1",
"connection": {
"edgeType": "STANDARD",
"nextActionId": "3"
}
}
// ...
],
"defaultBranchName": "Fall-through branch",
"defaultBranch": {
"edgeType": "STANDARD",
"nextActionId": "4"
}
}
xxxxxxxxxx
29
1
// Example static branch action
2
{
3
"actionId"
:
"1"
,
4
"inputValue"
: {
5
"propertyName"
:
"example_property"
6
},
7
"staticBranches"
: [
8
{
9
"branchValue"
:
"example_value_1"
,
10
"connection"
: {
11
"edgeType"
:
"STANDARD"
,
12
"nextActionId"
:
"2"
13
}
14
},
15
{
16
"branchValue"
:
"example_value_1"
,
17
"connection"
: {
18
"edgeType"
:
"STANDARD"
,
19
"nextActionId"
:
"3"
20
}
21
}
22
// ...
23
],
24
"defaultBranchName"
:
"Fall-through branch"
,
25
"defaultBranch"
: {
26
"edgeType"
:
"STANDARD"
,
27
"nextActionId"
:
"4"
28
}
29
}
Enrollment criteria
You can configure the conditions for objects to be enrolled in your workflow within the
enrollmentCriteria
property of your workflow specification.
The data you specify varies based on whether your enrollment is event-based or list-based. You can specify the enrollment type by setting the
type
of
enrollmentCriteria
to either
EVENT_BASED
or
LIST_BASED
.
You can specify the re-enrollment settings for objects enrolled in your workflow by setting the
shouldReEnroll
field to
true
or
false
.
Learn more about workflow enrollment in this
knowledge base article
.
Event-based enrollment
Event-based workflows will enroll objects when specific events occur, such as when a form is submitted.
You can configure the criteria for which events will trigger enrollment by defining a list of
eventFilterBranches
. Each
eventFilterBranch
definition specifies a qualifying event (e.g., a form submission) using an
eventTypeId
that corresponds to that event.
Most events will have the same values for the following fields:
operator
:
"HAS_COMPLETED"
filterBranchType
:
"UNIFIED_EVENTS"
filterBranchOperator
:
"AND"
The table below defines each
eventTypeId
that corresponds to the event you can configure for your workflow:
Event
Event type ID
Ad interaction
4-1553675
Email open
4-666440
Email reply
4-665538
Email click
4-666288
Email delivery
4-665536
Form submission
4-1639801
Form view
4-1639797
Form interaction
4-1639799
Marketing event registration
4-68559
Marketing event cancellation
4-69072
Call start
4-1733817
Call end
4-1741072
SMS shortlink click
4-1722276
CTA view
4-1555804
CTA click
4-1555805
Media play on webpage
4-675783
The example code below defines the
enrollmentCriteria
to enroll contacts who successfully submitted a form:
Copy code snippet
// Example of an enrollmentCriteria definition to enroll contacts who submitted a form
"enrollmentCriteria": {
"shouldReEnroll": true,
"type": "EVENT_BASED",
"eventFilterBranches": [
{
"filterBranches": [],
"filters": [],
"eventTypeId": "4-1639801",
"operator": "HAS_COMPLETED",
"filterBranchType": "UNIFIED_EVENTS",
"filterBranchOperator": "AND"
}
],
"listMembershipFilterBranches": []
}
xxxxxxxxxx
16
1
// Example of an enrollmentCriteria definition to enroll contacts who submitted a form
2
"enrollmentCriteria"
: {
3
"shouldReEnroll"
:
true
,
4
"type"
:
"EVENT_BASED"
,
5
"eventFilterBranches"
: [
6
{
7
"filterBranches"
: [],
8
"filters"
: [],
9
"eventTypeId"
:
"4-1639801"
,
10
"operator"
:
"HAS_COMPLETED"
,
11
"filterBranchType"
:
"UNIFIED_EVENTS"
,
12
"filterBranchOperator"
:
"AND"
13
}
14
],
15
"listMembershipFilterBranches"
: []
16
}
Filter-based enrollment
Workflows with filter-based enrollment will enroll objects when the criteria you configure is met.
Criteria is configured setting the
listFilterBranch
field of your
enrollmentCriteria
based which objects should qualify for enrollment in your workflow. Within a listFilterBranch, you can define the specific filter criteria using a list of
filterBranches
.
You can learn more about the syntax and formatting for defining a
listFilterBranch
in the
list filters documentation
.
For example, the
enrollmentCriteria
below defines the criteria for when a contact's
City
property is equal to
Dublin
:
Copy code snippet
// Example of an enrollmentCriteria definition to filter contacts based on whether their city property is equal to 'Dublin'
"enrollmentCriteria": {
"shouldReEnroll": false,
"type": "LIST_BASED",
"listFilterBranch": {
"filterBranches": [
{
"filterBranches": [],
"filters": [
{
"property": "city",
"operation": {
"operator": "IS_EQUAL_TO",
"includeObjectsWithNoValueSet": false,
"values": [
"Dublin"
],
"operationType": "MULTISTRING"
},
"filterType": "PROPERTY"
}
],
"filterBranchType": "AND",
"filterBranchOperator": "AND"
}
],
"filters": [],
"filterBranchType": "OR",
"filterBranchOperator": "OR"
},
"unEnrollObjectsNotMeetingCriteria": false,
"reEnrollmentTriggersFilterBranches": []
}
xxxxxxxxxx
33
1
// Example of an enrollmentCriteria definition to filter contacts based on whether their city property is equal to 'Dublin'
2
"enrollmentCriteria"
: {
3
"shouldReEnroll"
:
false
,
4
"type"
:
"LIST_BASED"
,
5
"listFilterBranch"
: {
6
"filterBranches"
: [
7
{
8
"filterBranches"
: [],
9
"filters"
: [
10
{
11
"property"
:
"city"
,
12
"operation"
: {
13
"operator"
:
"IS_EQUAL_TO"
,
14
"includeObjectsWithNoValueSet"
:
false
,
15
"values"
: [
16
"Dublin"
17
],
18
"operationType"
:
"MULTISTRING"
19
},
20
"filterType"
:
"PROPERTY"
21
}
22
],
23
"filterBranchType"
:
"AND"
,
24
"filterBranchOperator"
:
"AND"
25
}
26
],
27
"filters"
: [],
28
"filterBranchType"
:
"OR"
,
29
"filterBranchOperator"
:
"OR"
30
},
31
"unEnrollObjectsNotMeetingCriteria"
:
false
,
32
"reEnrollmentTriggersFilterBranches"
: []
33
}
Create a workflow
To create a workflow, make a
POST
request to
/automations/v4/flows
and provide a workflow specification in the body of your request.
Consult the
Action types
and
Enrollment criteria
sections above for a full reference on specifying the
actions
in your workflow and configuring the
enrollmentCriteria
.
For contact-based workflows, set the
type
to
"CONTACT_FLOW"
. For all other workflow types (e.g., deal-based, goal-based, etc.), set the
type
to
"PLATFORM_FLOW"
.
For example, if you wanted to create a workflow that executed the following:
Once a contact submits a specific form on your website, a ticket will be created in your account.
After a 1 day delay, the enrolled contact will be sent an
automated marketing email
.
The request body of your
POST
request would resemble the following:
Copy code snippet
// Example request body for POST request to create a workflow
{
"isEnabled": true,
"flowType": "WORKFLOW",
"name": "New form submission from interested contact",
"startActionId": "1",
"nextAvailableActionId": "4",
"actions": [
{
"type": "SINGLE_CONNECTION",
"actionId": "1",
"actionTypeVersion": 0,
"actionTypeId": "0-14",
"connection": {
"edgeType": "STANDARD",
"nextActionId": "3"
},
"fields": {
"object_type_id": "0-5",
"properties": [
{
"targetProperty": "subject",
"value": {
"type": "STATIC_VALUE",
"staticValue": "Review new form submission"
}
},
{
"targetProperty": "hs_pipeline_stage",
"value": {
"type": "STATIC_VALUE",
"staticValue": "1"
}
},
{
"targetProperty": "source_type",
"value": {
"type": "STATIC_VALUE",
"staticValue": "FORM"
}
},
{
"targetProperty": "content",
"value": {
"type": "STATIC_VALUE",
"staticValue": "[Triage required] new form submitted. Next available rep should review."
}
}
],
"associations": [
{
"target": {
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 16
},
"value": {
"type": "ENROLLED_OBJECT"
}
},
{
"target": {
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 339
},
"value": {
"type": "COPY_ASSOCIATION",
"sourceSpec": {
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 279
}
}
}
],
"use_explicit_associations": "true"
}
},
{
"type": "SINGLE_CONNECTION",
"actionId": "2",
"actionTypeVersion": 0,
"actionTypeId": "0-4",
"fields": {
"content_id": "113782603056"
}
},
{
"type": "SINGLE_CONNECTION",
"actionId": "3",
"actionTypeVersion": 0,
"actionTypeId": "0-1",
"connection": {
"edgeType": "STANDARD",
"nextActionId": "2"
},
"fields": {
"delta": "1440",
"time_unit": "MINUTES"
}
}
],
"enrollmentCriteria": {
"shouldReEnroll": false,
"type": "EVENT_BASED",
"eventFilterBranches": [
{
"filterBranches": [],
"filters": [
{
"property": "hs_form_id",
"operation": {
"operator": "IS_ANY_OF",
"includeObjectsWithNoValueSet": false,
"values": ["2f5cc7f8-d359-4e9c-a770-dd42ea07d217"],
"operationType": "ENUMERATION"
},
"filterType": "PROPERTY"
}
],
"eventTypeId": "4-1639801",
"operator": "HAS_COMPLETED",
"filterBranchType": "UNIFIED_EVENTS",
"filterBranchOperator": "AND"
}
],
"listMembershipFilterBranches": []
},
"timeWindows": [],
"blockedDates": [],
"customProperties": {},
"crmObjectCreationStatus": "COMPLETE",
"type": "CONTACT_FLOW",
"objectTypeId": "0-1",
"suppressionListIds": [],
"canEnrollFromSalesforce": false
}
xxxxxxxxxx
135
1
// Example request body for POST request to create a workflow
2
{
3
"isEnabled"
:
true
,
4
"flowType"
:
"WORKFLOW"
,
5
"name"
:
"New form submission from interested contact"
,
6
"startActionId"
:
"1"
,
7
"nextAvailableActionId"
:
"4"
,
8
"actions"
: [
9
{
10
"type"
:
"SINGLE_CONNECTION"
,
11
"actionId"
:
"1"
,
12
"actionTypeVersion"
:
0
,
13
"actionTypeId"
:
"0-14"
,
14
"connection"
: {
15
"edgeType"
:
"STANDARD"
,
16
"nextActionId"
:
"3"
17
},
18
"fields"
: {
19
"object_type_id"
:
"0-5"
,
20
"properties"
: [
21
{
22
"targetProperty"
:
"subject"
,
23
"value"
: {
24
"type"
:
"STATIC_VALUE"
,
25
"staticValue"
:
"Review new form submission"
26
}
27
},
28
{
29
"targetProperty"
:
"hs_pipeline_stage"
,
30
"value"
: {
31
"type"
:
"STATIC_VALUE"
,
32
"staticValue"
:
"1"
33
}
34
},
35
{
36
"targetProperty"
:
"source_type"
,
37
"value"
: {
38
"type"
:
"STATIC_VALUE"
,
39
"staticValue"
:
"FORM"
40
}
41
},
42
{
43
"targetProperty"
:
"content"
,
44
"value"
: {
45
"type"
:
"STATIC_VALUE"
,
46
"staticValue"
:
"[Triage required] new form submitted. Next available rep should review."
47
}
48
}
49
],
50
"associations"
: [
51
{
52
"target"
: {
53
"associationCategory"
:
"HUBSPOT_DEFINED"
,
54
"associationTypeId"
:
16
55
},
56
"value"
: {
57
"type"
:
"ENROLLED_OBJECT"
58
}
59
},
60
{
61
"target"
: {
62
"associationCategory"
:
"HUBSPOT_DEFINED"
,
63
"associationTypeId"
:
339
64
},
65
"value"
: {
66
"type"
:
"COPY_ASSOCIATION"
,
67
"sourceSpec"
: {
68
"associationCategory"
:
"HUBSPOT_DEFINED"
,
69
"associationTypeId"
:
279
70
}
71
}
72
}
73
],
74
"use_explicit_associations"
:
"true"
75
}
76
},
77
{
78
"type"
:
"SINGLE_CONNECTION"
,
79
"actionId"
:
"2"
,
80
"actionTypeVersion"
:
0
,
81
"actionTypeId"
:
"0-4"
,
82
"fields"
: {
83
"content_id"
:
"113782603056"
84
}
85
},
86
{
87
"type"
:
"SINGLE_CONNECTION"
,
88
"actionId"
:
"3"
,
89
"actionTypeVersion"
:
0
,
90
"actionTypeId"
:
"0-1"
,
91
"connection"
: {
92
"edgeType"
:
"STANDARD"
,
93
"nextActionId"
:
"2"
94
},
95
"fields"
: {
96
"delta"
:
"1440"
,
97
"time_unit"
:
"MINUTES"
98
}
99
}
100
],
101
"enrollmentCriteria"
: {
102
"shouldReEnroll"
:
false
,
103
"type"
:
"EVENT_BASED"
,
104
"eventFilterBranches"
: [
105
{
106
"filterBranches"
: [],
107
"filters"
: [
108
{
109
"property"
:
"hs_form_id"
,
110
"operation"
: {
111
"operator"
:
"IS_ANY_OF"
,
112
"includeObjectsWithNoValueSet"
:
false
,
113
"values"
: [
"2f5cc7f8-d359-4e9c-a770-dd42ea07d217"
],
114
"operationType"
:
"ENUMERATION"
115
},
116
"filterType"
:
"PROPERTY"
117
}
118
],
119
"eventTypeId"
:
"4-1639801"
,
120
"operator"
:
"HAS_COMPLETED"
,
121
"filterBranchType"
:
"UNIFIED_EVENTS"
,
122
"filterBranchOperator"
:
"AND"
123
}
124
],
125
"listMembershipFilterBranches"
: []
126
},
127
"timeWindows"
: [],
128
"blockedDates"
: [],
129
"customProperties"
: {},
130
"crmObjectCreationStatus"
:
"COMPLETE"
,
131
"type"
:
"CONTACT_FLOW"
,
132
"objectTypeId"
:
"0-1"
,
133
"suppressionListIds"
: [],
134
"canEnrollFromSalesforce"
:
false
135
}
Delete a workflow
To delete a workflow, make a
DELETE
request to
/automations/v4/{flowId}
using the ID of the workflow you want to delete as the
flowId
.
Please note:
once deleted, you cannot restore the workflow via the automation API. You must
contact HubSpot Support
to get assistance with restoring your workflow.
Share your feedback
Was this article helpful?
Yes
No
This form is used for documentation feedback only. Learn how to
get help with HubSpot
Developer Home
HubSpot Developer Documentation home
Copyright © 2024 HubSpot, Inc.
Legal Stuff
Privacy Policy
Manage Cookies
Toggle menu
API Guides
Overview
Analytics and events
App management
Automation
Create & manage workflows
Custom workflow actions
Sequences
Beta
Workflows v4
Beta
CMS
Conversations
Library
CRM
Marketing
Settings
Legal