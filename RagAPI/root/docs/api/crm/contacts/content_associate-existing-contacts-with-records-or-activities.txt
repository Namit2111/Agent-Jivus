CRM API | Contacts | HubSpot
×
close
We use cookies to improve HubSpot’s site. Some cookies are necessary for our website and services to function properly. Other cookies are optional and help personalize your experience, including advertising and analytics. You can consent to all cookies, decline all optional cookies, or manage optional cookies. Without a selection, our default cookie settings will apply. You can change your preferences at any time. To learn more, check out our
Cookie Policy
.
Accept all
Decline all
Manage cookies
Skip to main content
HubSpot logo
Open site navigation
Getting Started
Overview
What to build
Tools to help you build
Account types
Guides
API & Reference
API Endpoints
CMS Reference
UI Components
(Beta)
Search
Select a language
English
My account
API Guides
Apps
CMS Development
UI Customization
(Beta)
On this page
Create contacts
Properties
Associations
Retrieve contacts by record ID, email, or custom unique value property
Update contacts
Upsert contacts
Associate existing contacts with records or activities
Remove an association
Pin an activity on a contact record
Delete contacts
Secondary emails
Limits
API Guides
CRM
Objects
CRM API | Contacts
Contacts
Contacts endpoint reference
In HubSpot, contacts store information about the individual people that interact with your business. The contacts endpoints allow you to create and manage contact records in your HubSpot account, as well as sync contact data between HubSpot and other systems.
Learn more about objects, records, properties, and associations APIs in the
Understanding the CRM
guide. For more general information about objects and records in HubSpot,
learn how to manage your CRM database
.
Create contacts
To create new contacts, make a
POST
request to
/crm/v3/objects/contacts
.
In your request, include your contact data in a properties object. You can also add an associations object to associate your new contact with existing records (e.g., companies, deals), or activities (e.g., meetings, notes).
Properties
Contact details are stored in contact properties. There are
default HubSpot contact properties
, but you can also
create custom contact properties
.
When creating a new contact, you should include
at least one
of the following properties in your request:
email
,
firstname
, or
lastname
. It is recommended to always include
email
, because email address is the
primary unique identifier
to avoid duplicate contacts in HubSpot.
To view all available properties, you can retrieve a list of your account's contact properties by making a
GET
request to
/crm/v3/properties/contacts
. Learn more about the the
properties API
.
Please note
: if you've included
lifecyclestage
in your request, values must refer to the lifecycle stage's internal name. The internal names of default stages are
text
values, and do not change even if you edit the stage's
label
(e.g.,
subscriber
or
marketingqualifiedlead
). The internal names of
custom stages
are
numeric
values. You can find a stage's internal ID in your
lifecycle stage settings,
or by retrieving the lifecycle stage property via API.
For example, to create a new contact, your request may look similar to the following:
JSON
JSON
More
Copy code snippet
///Example request body
{
"properties": {
"email": "example@hubspot.com",
"firstname": "Jane",
"lastname": "Doe",
"phone": "(555) 555-5555",
"company": "HubSpot",
"website": "hubspot.com",
"lifecyclestage": "marketingqualifiedlead"
}
}
1
///Example request body
2
{
3
"properties"
: {
4
"email"
:
"example@hubspot.com"
,
5
"firstname"
:
"Jane"
,
6
"lastname"
:
"Doe"
,
7
"phone"
:
"(555) 555-5555"
,
8
"company"
:
"HubSpot"
,
9
"website"
:
"hubspot.com"
,
10
"lifecyclestage"
:
"marketingqualifiedlead"
11
}
12
}
Associations
When creating a new contact, you can also associate the contact with
existing records
or
activities
by including an associations object. For example, to associate a new contact with an existing company and email, your request would look like the following:
JSON
JSON
More
Copy code snippet
///Example request body
{
"properties": {
"email": "example@hubspot.com",
"firstname": "Jane",
"lastname": "Doe",
"phone": "(555) 555-5555",
"company": "HubSpot",
"website": "hubspot.com",
"lifecyclestage": "marketingqualifiedlead"
},
"associations": [
{
"to": {
"id": 123456
},
"types": [
{
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 279
}
]
},
{
"to": {
"id": 556677
},
"types": [
{
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 197
}
]
}
]
}
xxxxxxxxxx
36
1
///Example request body
2
{
3
"properties"
: {
4
"email"
:
"example@hubspot.com"
,
5
"firstname"
:
"Jane"
,
6
"lastname"
:
"Doe"
,
7
"phone"
:
"(555) 555-5555"
,
8
"company"
:
"HubSpot"
,
9
"website"
:
"hubspot.com"
,
10
"lifecyclestage"
:
"marketingqualifiedlead"
11
},
12
"associations"
: [
13
{
14
"to"
: {
15
"id"
:
123456
16
},
17
"types"
: [
18
{
19
"associationCategory"
:
"HUBSPOT_DEFINED"
,
20
"associationTypeId"
:
279
21
}
22
]
23
},
24
{
25
"to"
: {
26
"id"
:
556677
27
},
28
"types"
: [
29
{
30
"associationCategory"
:
"HUBSPOT_DEFINED"
,
31
"associationTypeId"
:
197
32
}
33
]
34
}
35
]
36
}
In the associations object, you should include the following:
Parameter
Description
to
The record or activity you want to associate with the contact, specified by its unique
id
value.
types
The type of the association between the contact and the record/activity. Include the
associationCategory
and
associationTypeId
. Default association type IDs are listed
here
, or you can retrieve the value for custom association types (i.e. labels) via the
associations API
.
Retrieve contacts by record ID, email, or custom unique value property
You can retrieve contacts individually or in batches.
To retrieve an individual contact, make a
GET
request to
/crm/v3/objects/contacts/{contactId} or
/crm/v3/objects/contacts/{email}?idProperty=email
.
To request a list of all contacts, make a
GET
request to
/crm/v3/objects/contacts
.
For these endpoints, you can include the following query parameters in the request URL:
Parameter
Description
properties
A comma separated list of the properties to be returned in the response. If the requested contact doesn't have a value for a property, it will not appear in the response.
propertiesWithHistory
A comma separated list of the current and historical properties to be returned in the response. If the requested contact doesn't have a value for a property, it will not appear in the response.
associations
A comma separated list of objects to retrieve associated IDs for. Any specified associations that don't exist will not be returned in the response. Learn more about the
associations API.
To retrieve a batch of specific contacts by record ID, email address, or a
custom unique identifier property
, make a
POST
request to
crm/v3/objects/contacts/batch/read
. The batch endpoint
cannot
retrieve associations. Learn how to batch read associations with the
associations API
.
For the batch read endpoint, you can use the optional
idProperty
parameter to retrieve contacts by
email
or a custom
unique identifier property
. By default, the
id
values in the request refer to the record ID (
hs_object_id
), so the
idProperty
parameter is not required when retrieving by record ID. If you're using
email
or a custom unique value property to retrieve contacts, you must include the
idProperty
parameter.
For example, to retrieve a batch of contacts based on their record ID values, your request could look like the following (current values only, or current and historical values):
Copy code snippet
// Example request body with record ID (current values)
{
"properties": ["email", "lifecyclestage", "jobtitle"],
"inputs": [
{
"id": "1234567"
},
{
"id": "987456"
}
]
}
xxxxxxxxxx
12
1
// Example request body with record ID (current values)
2
{
3
"properties"
: [
"email"
,
"lifecyclestage"
,
"jobtitle"
],
4
"inputs"
: [
5
{
6
"id"
:
"1234567"
7
},
8
{
9
"id"
:
"987456"
10
}
11
]
12
}
Copy code snippet
// Example request body with record ID (current and historical values)
{
"propertiesWithHistory": ["lifecyclestage", "hs_lead_status"],
"inputs": [
{
"id": "1234567"
},
{
"id": "987456"
}
]
}
xxxxxxxxxx
12
1
// Example request body with record ID (current and historical values)
2
{
3
"propertiesWithHistory"
: [
"lifecyclestage"
,
"hs_lead_status"
],
4
"inputs"
: [
5
{
6
"id"
:
"1234567"
7
},
8
{
9
"id"
:
"987456"
10
}
11
]
12
}
To retrieve contacts based on email address or a custom unique identifier property (e.g., a customer ID number unique for your business), your request would look like:
Copy code snippet
// Example request body with email address
{
"properties": ["email", "lifecyclestage", "jobtitle"],
"idProperty": "email",
"inputs": [
{
"id": "lgilmore@thedragonfly.com"
},
{
"id": "sstjames@thedragonfly.com"
}
]
}
xxxxxxxxxx
13
1
// Example request body with email address
2
{
3
"properties"
: [
"email"
,
"lifecyclestage"
,
"jobtitle"
],
4
"idProperty"
:
"email"
,
5
"inputs"
: [
6
{
7
"id"
:
"lgilmore@thedragonfly.com"
8
},
9
{
10
"id"
:
"sstjames@thedragonfly.com"
11
}
12
]
13
}
Copy code snippet
// Example request body with a unique value property
{
"properties": ["email", "lifecyclestage", "jobtitle"],
"idProperty": "internalcustomerid",
"inputs": [
{
"id": "12345"
},
{
"id": "67891"
}
]
}
xxxxxxxxxx
13
1
// Example request body with a unique value property
2
{
3
"properties"
: [
"email"
,
"lifecyclestage"
,
"jobtitle"
],
4
"idProperty"
:
"internalcustomerid"
,
5
"inputs"
: [
6
{
7
"id"
:
"12345"
8
},
9
{
10
"id"
:
"67891"
11
}
12
]
13
}
Update contacts
You can update contacts individually or in batches.
To update
individual
contacts, you can use record ID (
id
) or the contact's email address (
email
).
To update an individual contact by its record ID, make a
PATCH
request to
/crm/v3/objects/contacts/{contactId}
, and include the data you want to update.
To update an individual contact by its email, make a
PATCH
request to
/crm/v3/objects/contacts/{email}?idProperty=email
, and include the data you want to update.
For example:
Copy code snippet
// Example request body with record ID
// PATCH /crm/v3/objects/contacts/123456789
{
"properties": {
"favorite_food": "burger",
"jobtitle": "Manager",
"lifecyclestage": "Customer"
}
}
xxxxxxxxxx
9
1
// Example request body with record ID
2
// PATCH /crm/v3/objects/contacts/123456789
3
{
4
"properties"
: {
5
"favorite_food"
:
"burger"
,
6
"jobtitle"
:
"Manager"
,
7
"lifecyclestage"
:
"Customer"
8
}
9
}
Please note
: if updating the
lifecyclestage
property, you can only set the value
forward
in the stage order. To set the lifecycle stage backward, you'll first need to clear the record's existing lifecycle stage value. The value can be
cleared manually
, or may be automatically cleared via a
workflow
or an integration that syncs contact data.
To update contacts in
batches
, you can use the contacts' record ID values (
id
). To update multiple contacts, make a
POST
request to
/crm/v3/objects/contacts/batch/update
. In your request body, include each contact's record ID as the
id
​and include the properties you want to update.
For example:
Copy code snippet
// Example request body
// POST /crm/v3/objects/contacts/batch/update
{
"inputs": [
{
"id": "123456789",
"properties": {
"favorite_food": "burger"
}
},
{
"id": "56789123",
"properties": {
"favorite_food": "Donut"
}
}
]
}
xxxxxxxxxx
18
1
// Example request body
2
// POST /crm/v3/objects/contacts/batch/update
3
{
4
"inputs"
: [
5
{
6
"id"
:
"123456789"
,
7
"properties"
: {
8
"favorite_food"
:
"burger"
9
}
10
},
11
{
12
"id"
:
"56789123"
,
13
"properties"
: {
14
"favorite_food"
:
"Donut"
15
}
16
}
17
]
18
}
Upsert contacts
You can also batch create and update contacts at the same time using the upsert endpoint. For this endpoint, you can use
email
or a
custom unique identifier property
. Following the request, if the contacts already exist, they'll be updated and if the contacts don't exist, they'll be created.
To upsert contacts, make a
POST
request to
/crm/v3/objects/contacts/batch/upsert
. In your request body, include the
idProperty
parameter to identify whether you're using
email
or a custom unique identifier property. Include that property's value as the
id
​and add the other properties you want to set or update.
For example, your request could look like the following:
Copy code snippet
// Example request body with email
// POST /crm/v3/objects/contacts/batch/upsert
{
"inputs": [
{
"properties": {
"phone": "5555555555"
},
"id": "test@test.com",
"idProperty": "email"
},
{
"properties": {
"phone": "7777777777"
},
"id": "example@hubspot.com",
"idProperty": "email"
}
]
}
xxxxxxxxxx
20
1
// Example request body with email
2
// POST /crm/v3/objects/contacts/batch/upsert
3
{
4
"inputs"
: [
5
{
6
"properties"
: {
7
"phone"
:
"5555555555"
8
},
9
"id"
:
"test@test.com"
,
10
"idProperty"
:
"email"
11
},
12
{
13
"properties"
: {
14
"phone"
:
"7777777777"
15
},
16
"id"
:
"example@hubspot.com"
,
17
"idProperty"
:
"email"
18
}
19
]
20
}
Associate existing contacts with records or activities
To associate a contact with other CRM records or an activity, make a
PUT
request to
/crm/v3/objects/contacts/{contactId}/associations/{toObjectType}/{toObjectId}/{associationTypeId}
.
To retrieve the
associationTypeId
value, refer to
this list
of default values, or make a
GET
request to
/crm/v4/associations/{fromObjectType}/{toObjectType}/labels
.
Learn more about the
associations API.
Remove an association
To remove an association between a contact and a record or activity, make a
DELETE
request to the following URL:
/crm/v3/objects/contacts/{contactID}/associations/{toObjectType}/{toObjectId}/{associationTypeId}
.
Pin an activity on a contact record
You can
pin an activity
on a contact record by including the
hs_pinned_engagement_id
field in your request. In the field, include the
id
of the activity to pin, which can be retrieved via the
engagements APIs
. You can pin one activity per record, and the activity must already be associated with the contact prior to pinning.
To set or update a contact's pinned activity, your request could look like:
Copy code snippet
// Example request body PATCH /crm/v3/objects/contacts/{contactId}
{
"properties": {
"hs_pinned_engagement_id": 123456789
}
}
xxxxxxxxxx
6
1
// Example request body PATCH /crm/v3/objects/contacts/{contactId}
2
{
3
"properties"
: {
4
"hs_pinned_engagement_id"
:
123456789
5
}
6
}
You can also create a contact, associate it with an existing activity, and pin the activity in the same request. For example:
Copy code snippet
// Example request body POST /crm/v3/objects/contacts
{
"properties": {
"email": "example@hubspot.com",
"firstname": "Jane",
"lastname": "Doe",
"phone": "(555) 555-5555",
"hs_pinned_engagement_id": 123456789
},
"associations": [
{
"to": {
"id": 123456789
},
"types": [
{
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 201
}
]
}
]
}
xxxxxxxxxx
23
1
// Example request body POST /crm/v3/objects/contacts
2
{
3
"properties"
: {
4
"email"
:
"example@hubspot.com"
,
5
"firstname"
:
"Jane"
,
6
"lastname"
:
"Doe"
,
7
"phone"
:
"(555) 555-5555"
,
8
"hs_pinned_engagement_id"
:
123456789
9
},
10
"associations"
: [
11
{
12
"to"
: {
13
"id"
:
123456789
14
},
15
"types"
: [
16
{
17
"associationCategory"
:
"HUBSPOT_DEFINED"
,
18
"associationTypeId"
:
201
19
}
20
]
21
}
22
]
23
}
Delete contacts
You can delete contacts individually or in batches, which will add the contact to the recycling bin in HubSpot. You can later
restore the contact within HubSpot
.
To delete an individual contact by its ID, make a
DELETE
request to
/crm/v3/objects/contacts/{contactId}
.
Learn more about batch deleting contacts in the
reference documentation
.
Secondary emails
Secondary email addresses
are used when a contact has more than one email. Additional emails are still unique identifiers for contacts, so multiple contacts cannot have the same secondary email address.
To view secondary emails for contacts, when you retrieve all or individual contacts, include the
properties
parameter with the properties
email
and
hs_additional_emails
.
A contact's primary email address will be displayed in the
email
field and additional emails will be displayed in the
hs_additional_emails
field.
To add secondary emails to a contact, when creating or editing the contact, in your request body, include emails in the
hs_additional_emails
field. Multiple emails can be separated by a semi-colon.
If you're using the V1 contact APIs, learn how to use the secondary email endpoints in
this reference guide
.
Limits
Batch operations are limited to 100 records at a time. For example, you cannot batch update more than 100 contacts in one request. There are also limits for
contacts and form submissions
.
Share your feedback
Was this article helpful?
Yes
No
This form is used for documentation feedback only. Learn how to
get help with HubSpot
Developer Home
HubSpot Developer Documentation home
Copyright © 2024 HubSpot, Inc.
Legal Stuff
Privacy Policy
Manage Cookies
Toggle menu
API Guides
Overview
Analytics and events
App management
Automation
CMS
Conversations
Library
CRM
Understanding the CRM
Using object APIs
Associations
Commerce
Engagements
Extensions
Export CRM data
Import CRM data
Lists
Objects
Custom objects
Companies
Contacts
Deal splits
Beta
Deals
Feedback submissions
Goals
New
Leads
Line items
Products
Tickets
CRM embed
Owners
Pipelines
Properties
Search
Limits tracking
Object library
Marketing
Settings
Legal