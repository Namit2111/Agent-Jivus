CRM API | Imports | HubSpot
×
close
We use cookies to improve HubSpot’s site. Some cookies are necessary for our website and services to function properly. Other cookies are optional and help personalize your experience, including advertising and analytics. You can consent to all cookies, decline all optional cookies, or manage optional cookies. Without a selection, our default cookie settings will apply. You can change your preferences at any time. To learn more, check out our
Cookie Policy
.
Accept all
Decline all
Manage cookies
Skip to main content
HubSpot logo
Open site navigation
Getting Started
Overview
What to build
Tools to help you build
Account types
Guides
API & Reference
API Endpoints
CMS Reference
UI Components
(Beta)
Search
Select a language
English
My account
API Guides
Apps
CMS Development
UI Customization
(Beta)
On this page
Start an import
Format the importRequest data
Map file columns to HubSpot properties
Import one file with one object
Import one file with multiple objects
Import multiple files
Get previous imports
Cancel an import
View and troubleshoot import errors
Limits
API Guides
CRM
CRM API | Imports
Imports
Import CRM data endpoint reference
Use the imports API to import CRM records and activities into your HubSpot account, such as contacts, companies, and notes. Once imported, you can access and update records and activities through the various CRM API endpoints, including the
contacts API,
associations API
, and
engagements APIs.
You can also
import records and activities using the guided import tool in HubSpot
.
Before starting your import, learn more about:
File requirements
Required properties for record and activity imports
Required properties for marketing event participant imports
Please note
: to create custom events or associate events with records, use the
custom events API
instead of importing.
Start an import
You can start an import by making a
POST
request to
/crm/v3/imports
with a request body that specifies how to map the columns of your import file to the associated properties in HubSpot.
API imports are sent as form-data type requests, with the request body containing following fields:
importRequest
: a text field that contains the request JSON.
files
: a file field that contains the import file.
For the request header, add a
Content-Type
header with a value of
multipart/form-data
.
The screenshot below shows what your request might look like when using an application like Postman:
Format the importRequest data
In your request, define the import file details, including mapping the spreadsheet's columns to HubSpot data. Your request should include the following fields:
name
: the name of the import. In HubSpot, this is the name
displayed in the imports tool
, as well as the name that you can reference in other tools, such as lists.
importOperations
: an optional field used to indicate whether the import should
create and update,
only
create, or
only
update records
for a certain object or activity. Include the
objectTypeId
for the object/activity and whether you want to
UPSERT
(create and update),
CREATE
, or
UPDATE
records. For example, the field would look like this in your request:
"importOperations": {"0-1": "CREATE"}
. If you don't include this field, the default value used for the import is
UPSERT
.
dateFormat
: the format for dates included in the file. By default, this is set to
MONTH_DAY_YEAR
, but you can also use
DAY_MONTH_YEAR
or
YEAR_MONTH_DAY
.
marketableContactImport
: an optional field to indicate the
marketing status
of contacts in your import file. This is only used when importing contacts into accounts that have
access to marketing contacts
. To set the contacts in the file as marketing, use the value
true
. To set the contacts in the file as non-marketing, use the value
false
.
createContactListFromImport
: an optional field to
create a static list of the contacts
from your import. To create a list from your file, use the value
true
.
files
: an array that contains your import file information.
fileName
: the name of the import file.
fileFormat:
the import file's format. For CSV files, use a value of
CSV
. For Excel files, use a value of
SPREADSHEET
.
fileImportPage
: contains the
columnMappings
array required to map data from your import file to HubSpot data. Learn more about column mapping below.
Map file columns to HubSpot properties
Within the
columnMappings
array, include an entry for each column in your import file, matching the order of your spreadsheet. For each column, include the following fields:
columnObjectTypeId:
the name or
objectTypeId
value of the object or activity to which the data belongs. Refer to
this article
for a full list of
objectTypeId
values.
columnName:
the name of the column header.
propertyName:
the internal name of the HubSpot property that the data will map to. For the common column in
multi-file imports
,
propertyName
should be
null
when the
toColumnObjectTypeId
field is used.
columnType:
used to specify that a column contains a
unique identifier property.
Depending on the property and goal of the import, use one of the following values:
HUBSPOT_OBJECT_ID:
the ID of a record. For example, your contact import file might contain a
Record ID
column that stores the ID of the company you want to associate the contacts with.
HUBSPOT_ALTERNATE_ID:
a unique identifier other than the record ID. For example, your contact import file might contain an
Email
column that stores the contacts' email addresses.
FLEXIBLE_ASSOCIATION_LABEL
: include this column type to indicate the column contains association labels.
ASSOCIATION_KEYS
: for same object association imports only, include this column type for the unique identifier of the same object records you're associating. For example, in your request for a contacts association import, the
Associated contact [email/Record ID]
column must have a
columnType
of
ASSOCIATION_KEYS
. Learn more about
setting up your import file for a same object association import
.
toColumnObjectTypeId
: for
multi-file
or multiple object imports, the name or
objectTypeId
of the object the
common column
property or association label belongs to. Include this field for the common column property in the file of the object the property does
not
belong to. For example, if you're associating contacts and companies in two files with the contact property
Email
as the common column, include the
toColumnObjectTypeId
for the
Email
column in the
company
file.
foreignKeyType
: for
multi-file imports
only, the type of association the common column should use, specified by the
associationTypeId
and
associationCategory
. Include this field for the common column property in the file of the object the property does
not
belong to. For example, if you're associating contacts and companies in two files with the contact property
Email
as the common column, include the
foreignKeyType
for the
Email
column in the
company
file.
associationIdentifierColumn
: for
multi-file imports
only, indicates the property used in the common column to associate the records. Include this field for the common column property in the file of the object the property belongs to. For example, if you're associating contacts and companies in two files with contact property
Email
as the common column, set the
associationIdentifierColumn
as
true
for the
Email
column in the
contact
file.
Import one file with one object
Below is an example request body of importing one file to create contacts:
JSON
Python
Shell script
JSON
Python
Shell script
More
Copy code snippet
// Example POST to https://api.hubspot.com/crm/v3/imports
// Content-Type header set to multipart/form-data
{
"name": "November Marketing Event Leads",
"importOperations": {
"0-1": "CREATE"
},
"dateFormat": "DAY_MONTH_YEAR",
"files": [
{
"fileName": "Nov-event-leads.csv",
"fileFormat": "CSV",
"fileImportPage": {
"hasHeader": true,
"columnMappings": [
{
"columnObjectTypeId": "0-1",
"columnName": "First Name",
"propertyName": "firstname"
},
{
"columnObjectTypeId": "0-1",
"columnName": "Last Name",
"propertyName": "lastname"
},
{
"columnObjectTypeId": "0-1",
"columnName": "Email",
"propertyName": "email",
"columnType": "HUBSPOT_ALTERNATE_ID"
}
]
}
}
]
}
​
x
1
// Example POST to https://api.hubspot.com/crm/v3/imports
2
// Content-Type header set to multipart/form-data
3
​
4
{
5
"name"
:
"November Marketing Event Leads"
,
6
"importOperations"
: {
7
"0-1"
:
"CREATE"
8
},
9
"dateFormat"
:
"DAY_MONTH_YEAR"
,
10
"files"
: [
11
{
12
"fileName"
:
"Nov-event-leads.csv"
,
13
"fileFormat"
:
"CSV"
,
14
"fileImportPage"
: {
15
"hasHeader"
:
true
,
16
"columnMappings"
: [
17
{
18
"columnObjectTypeId"
:
"0-1"
,
19
"columnName"
:
"First Name"
,
20
"propertyName"
:
"firstname"
21
},
22
{
23
"columnObjectTypeId"
:
"0-1"
,
24
"columnName"
:
"Last Name"
,
25
"propertyName"
:
"lastname"
26
},
27
{
28
"columnObjectTypeId"
:
"0-1"
,
29
"columnName"
:
"Email"
,
30
"propertyName"
:
"email"
,
31
"columnType"
:
"HUBSPOT_ALTERNATE_ID"
32
}
33
]
34
}
35
}
36
]
37
}
Below is another example, importing one file to create and update marketing event partcipants:
JSON
JSON
More
Copy code snippet
// Example POST to https://api.hubspot.com/crm/v3/imports
// Content-Type header set to multipart/form-data
{
"name": "Marketing Events Import Example",
"marketingEventObjectId": 377224141223,
"importOperations": {
"0-1": "UPSERT",
"0-54": "CREATE"
},
"dateFormat": "YEAR_MONTH_DAY",
"timeZone": "America/New_York",
"files": [
{
"fileName": "Marketing Events Import Example.csv",
"fileFormat": "CSV",
"fileImportPage": {
"hasHeader": true,
"columnMappings": [
{
"columnName": "First Name",
"columnObjectTypeId": "0-1",
"propertyName": "firstname",
"columnType": "STANDARD"
},
{
"columnName": "Last Name",
"columnObjectTypeId": "0-1",
"propertyName": "lastname",
"columnType": "STANDARD"
},
{
"columnName": "Email",
"columnObjectTypeId": "0-1",
"propertyName": "email",
"columnType": "HUBSPOT_ALTERNATE_ID"
},
{
"columnName": "Registered",
"columnObjectTypeId": "0-54",
"columnType": "EVENT_TIMESTAMP",
"marketingEventSubmissionType": "REGISTERED"
},
{
"columnName": "Attended",
"columnObjectTypeId": "0-54",
"columnType": "EVENT_TIMESTAMP",
"marketingEventSubmissionType": "JOINED"
},
{
"columnName": "Left",
"columnObjectTypeId": "0-54",
"columnType": "EVENT_TIMESTAMP",
"marketingEventSubmissionType": "LEFT"
},
{
"columnName": "Cancelled",
"columnObjectTypeId": "0-54",
"columnType": "EVENT_TIMESTAMP",
"marketingEventSubmissionType": "CANCELLED"
}
]
}
}
]
}
xxxxxxxxxx
66
1
// Example POST to https://api.hubspot.com/crm/v3/imports
2
// Content-Type header set to multipart/form-data
3
​
4
{
5
"name"
:
"Marketing Events Import Example"
,
6
"marketingEventObjectId"
:
377224141223
,
7
"importOperations"
: {
8
"0-1"
:
"UPSERT"
,
9
"0-54"
:
"CREATE"
10
},
11
"dateFormat"
:
"YEAR_MONTH_DAY"
,
12
"timeZone"
:
"America/New_York"
,
13
"files"
: [
14
{
15
"fileName"
:
"Marketing Events Import Example.csv"
,
16
"fileFormat"
:
"CSV"
,
17
"fileImportPage"
: {
18
"hasHeader"
:
true
,
19
"columnMappings"
: [
20
{
21
"columnName"
:
"First Name"
,
22
"columnObjectTypeId"
:
"0-1"
,
23
"propertyName"
:
"firstname"
,
24
"columnType"
:
"STANDARD"
25
},
26
{
27
"columnName"
:
"Last Name"
,
28
"columnObjectTypeId"
:
"0-1"
,
29
"propertyName"
:
"lastname"
,
30
"columnType"
:
"STANDARD"
31
},
32
{
33
"columnName"
:
"Email"
,
34
"columnObjectTypeId"
:
"0-1"
,
35
"propertyName"
:
"email"
,
36
"columnType"
:
"HUBSPOT_ALTERNATE_ID"
37
},
38
{
39
"columnName"
:
"Registered"
,
40
"columnObjectTypeId"
:
"0-54"
,
41
"columnType"
:
"EVENT_TIMESTAMP"
,
42
"marketingEventSubmissionType"
:
"REGISTERED"
43
},
44
{
45
"columnName"
:
"Attended"
,
46
"columnObjectTypeId"
:
"0-54"
,
47
"columnType"
:
"EVENT_TIMESTAMP"
,
48
"marketingEventSubmissionType"
:
"JOINED"
49
},
50
{
51
"columnName"
:
"Left"
,
52
"columnObjectTypeId"
:
"0-54"
,
53
"columnType"
:
"EVENT_TIMESTAMP"
,
54
"marketingEventSubmissionType"
:
"LEFT"
55
},
56
{
57
"columnName"
:
"Cancelled"
,
58
"columnObjectTypeId"
:
"0-54"
,
59
"columnType"
:
"EVENT_TIMESTAMP"
,
60
"marketingEventSubmissionType"
:
"CANCELLED"
61
}
62
]
63
}
64
}
65
]
66
}
Import one file with multiple objects
Below is an example request body of importing and associating contacts and companies in one file with association labels:
JSON
JSON
More
Copy code snippet
// Example POST to https://api.hubspot.com/crm/v3/imports
// Content-Type header set to multipart/form-data
{
"name": "Association Label Import",
"dateFormat": "DAY_MONTH_YEAR",
"files": [
{
"fileName": "association label example.xlsx",
"fileFormat": "SPREADSHEET",
"fileImportPage": {
"hasHeader": true,
"columnMappings": [
{
"columnObjectTypeId": "0-1",
"columnName": "Email",
"propertyName": "email"
},
{
"columnObjectTypeId": "0-2",
"columnName": "Domain",
"propertyName": "domain"
},
{
"columnName": "Association Label",
"columnType": "FLEXIBLE_ASSOCIATION_LABEL",
"columnObjectTypeId": "0-1",
"toColumnObjectTypeId": "0-2"
}
]
}
}
]
}
xxxxxxxxxx
34
1
// Example POST to https://api.hubspot.com/crm/v3/imports
2
// Content-Type header set to multipart/form-data
3
​
4
{
5
"name"
:
"Association Label Import"
,
6
"dateFormat"
:
"DAY_MONTH_YEAR"
,
7
"files"
: [
8
{
9
"fileName"
:
"association label example.xlsx"
,
10
"fileFormat"
:
"SPREADSHEET"
,
11
"fileImportPage"
: {
12
"hasHeader"
:
true
,
13
"columnMappings"
: [
14
{
15
"columnObjectTypeId"
:
"0-1"
,
16
"columnName"
:
"Email"
,
17
"propertyName"
:
"email"
18
},
19
{
20
"columnObjectTypeId"
:
"0-2"
,
21
"columnName"
:
"Domain"
,
22
"propertyName"
:
"domain"
23
},
24
{
25
"columnName"
:
"Association Label"
,
26
"columnType"
:
"FLEXIBLE_ASSOCIATION_LABEL"
,
27
"columnObjectTypeId"
:
"0-1"
,
28
"toColumnObjectTypeId"
:
"0-2"
29
}
30
]
31
}
32
}
33
]
34
}
Import multiple files
Below is an example request body of importing and associating contacts and companies in two files, where the contact property
Email
is the common column in the files:
JSON
JSON
More
Copy code snippet
// Example POST to https://api.hubspot.com/crm/v3/imports
// Content-Type header set to multipart/form-data
{
"name": "Contact Company import",
"dateFormat": "YEAR_MONTH_DAY",
"files": [
{
"fileName": "contact-import-file.csv",
"fileFormat": "CSV",
"fileImportPage": {
"hasHeader": true,
"columnMappings": [
{
"columnObjectTypeId": "0-1",
"columnName": "First name",
"propertyName": "firstname"
},
{
"columnObjectTypeId": "0-1",
"columnName": "Last name",
"propertyName": "lastname"
},
{
"columnObjectTypeId": "0-1",
"columnName": "Email",
"propertyName": "email",
"associationIdentifierColumn": true
}
]
}
},
{
"fileName": "company-import-file.csv",
"fileFormat": "CSV",
"fileImportPage": {
"hasHeader": true,
"columnMappings": [
{
"columnObjectTypeId": "0-2",
"columnName": "Company name",
"propertyName": "name"
},
{
"columnObjectTypeId": "0-2",
"columnName": "Company domain name",
"propertyName": "domain",
"columnType": "HUBSPOT_ALTERNATE_ID"
},
{
"columnObjectTypeId": "0-2",
"toColumnObjectTypeId": "0-1",
"columnName": "Email",
"propertyName": null,
"foreignKeyType": {
"associationTypeId": 280,
"associationCategory": "HUBSPOT_DEFINED"
}
}
]
}
}
]
}
xxxxxxxxxx
64
1
// Example POST to https://api.hubspot.com/crm/v3/imports
2
// Content-Type header set to multipart/form-data
3
​
4
{
5
"name"
:
"Contact Company import"
,
6
"dateFormat"
:
"YEAR_MONTH_DAY"
,
7
"files"
: [
8
{
9
"fileName"
:
"contact-import-file.csv"
,
10
"fileFormat"
:
"CSV"
,
11
"fileImportPage"
: {
12
"hasHeader"
:
true
,
13
"columnMappings"
: [
14
{
15
"columnObjectTypeId"
:
"0-1"
,
16
"columnName"
:
"First name"
,
17
"propertyName"
:
"firstname"
18
},
19
{
20
"columnObjectTypeId"
:
"0-1"
,
21
"columnName"
:
"Last name"
,
22
"propertyName"
:
"lastname"
23
},
24
{
25
"columnObjectTypeId"
:
"0-1"
,
26
"columnName"
:
"Email"
,
27
"propertyName"
:
"email"
,
28
"associationIdentifierColumn"
:
true
29
}
30
]
31
}
32
},
33
{
34
"fileName"
:
"company-import-file.csv"
,
35
"fileFormat"
:
"CSV"
,
36
"fileImportPage"
: {
37
"hasHeader"
:
true
,
38
"columnMappings"
: [
39
{
40
"columnObjectTypeId"
:
"0-2"
,
41
"columnName"
:
"Company name"
,
42
"propertyName"
:
"name"
43
},
44
{
45
"columnObjectTypeId"
:
"0-2"
,
46
"columnName"
:
"Company domain name"
,
47
"propertyName"
:
"domain"
,
48
"columnType"
:
"HUBSPOT_ALTERNATE_ID"
49
},
50
{
51
"columnObjectTypeId"
:
"0-2"
,
52
"toColumnObjectTypeId"
:
"0-1"
,
53
"columnName"
:
"Email"
,
54
"propertyName"
:
null
,
55
"foreignKeyType"
: {
56
"associationTypeId"
:
280
,
57
"associationCategory"
:
"HUBSPOT_DEFINED"
58
}
59
}
60
]
61
}
62
}
63
]
64
}
On a successful request, the response will include an
importId
which you can use to retrieve or cancel the import. Once completed, you can
view the import in HubSpot
, but imports completed via API will not be available as an option when filtering records by import in views, lists, reports, or workflows.
Get previous imports
To retrieve all imports from your HubSpot account, make a
GET
request to
/crm/v3/imports/
. To retrieve information for a specific import, make a
GET
request to
/crm/v3/imports/{importId}
.
When you retrieve imports, information will be returned including the import's name, source, file format, language, date format, and column mappings. The import's
state
will also be returned, which can be any of the following:
STARTED
: HubSpot recognizes that the import exists, but the import hasn't started processing yet.
PROCESSING
: The import is actively being processed.
DONE
: The import is complete. All the objects, activities, or associations have been updated or created.
FAILED
: There was an error that was not detected when the import was started. The import was not completed.
CANCELED
: User cancelled the export while it was in any of the
STARTED
,
PROCESSING
, or
DEFERRED
states.
DEFERRED
: The maximum number of imports (three) are processing at the same time. The import will start once one of the other imports finishes processing.
Learn more about paging and limiting results in the
reference documentation
.
Please note
: when retrieving imports using a private app access token, the response will only include imports performed by that private app. Imports completed in HubSpot or via another private app will not be returned.
Cancel an import
To cancel an active import, make a
POST
request to
/crm/v3/imports/{importId}/cancel
.
View and troubleshoot import errors
To view errors for a specific import, make a
GET
request to
/crm/v3/imports/{importId}/errors
. Learn more about
common import errors and how to resolve them
.
For errors such as
Incorrect number of columns
,
Unable to parse
JSON or
404 text/html is not accepted
:
Ensure that there is a column header for each column in your file, and that the request body contains a
columnMapping
entry for each column. The following criteria should be met:
The column order in the request body and import file should match. If the column order doesn't match, the system will attempt to automatically reorder but may be unsuccessful, resulting in an error when the import is started.
Every column needs to be mapped. If a column is not mapped, the import request may still be successful, but would result in the
Incorrect number of columns
error when the import is started.
Ensure that the file's name and the
fileName
field in your request JSON match, and that you've included the file extension in the
fileName
field. For example,
import_name.csv.
Ensure that your header includes
Content-Type
with a value of
multipart/form-data
.
JSON
Python
PHP
Shell script
JSON
Python
PHP
Shell script
More
Copy code snippet
Example POST URL:
https://api.hubapi.com/crm/v3/imports?
Example importRequest JSON data:
This example contains 3 columns:
- First name, mapped to the firstname contact property
- Email, mapped to the email contact property
- Company ID, which contains a list of company record IDs
that the contact will be assocated with.
{
"name": "test_import",
"files": [
{
"fileName": "final_emails.csv",
"fileImportPage": {
"hasHeader": true,
"columnMappings": [
{
"ignored": false,
"columnName": "First Name",
"idColumnType": null,
"propertyName": "firstname",
"foreignKeyType": null,
"columnObjectType": "CONTACT",
"associationIdentifierColumn": false
},
{
"ignored": false,
"columnName": "Email",
"idColumnType": "HUBSPOT_ALTERNATE_ID",
"propertyName": "email",
"foreignKeyType": null,
"columnObjectType": "CONTACT",
"associationIdentifierColumn": false
},
{
"ignored": false,
"columnName": "Company ID",
"idColumnType": "HUBSPOT_OBJECT_ID",
"propertyName": null,
"foreignKeyType": {
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 1
},
"columnObjectType": "CONTACT",
"associationIdentifierColumn": false
}
]
}
}
]
}
xxxxxxxxxx
52
1
Example
POST
URL
:
2
https
:
//api.hubapi.com/crm/v3/imports?
3
​
4
Example
importRequest
JSON
data
:
5
This
example
contains
3
columns
:
6
-
First
name
,
mapped
to
the
firstname
contact
property
7
-
Email
,
mapped
to
the
email
contact
property
8
-
Company
ID
,
which
contains
a
list
of
company
record
IDs
9
that
the
contact
will
be
assocated
with
.
10
{
11
"name"
:
"test_import"
,
12
"files"
: [
13
{
14
"fileName"
:
"final_emails.csv"
,
15
"fileImportPage"
: {
16
"hasHeader"
:
true
,
17
"columnMappings"
: [
18
{
19
"ignored"
:
false
,
20
"columnName"
:
"First Name"
,
21
"idColumnType"
:
null
,
22
"propertyName"
:
"firstname"
,
23
"foreignKeyType"
:
null
,
24
"columnObjectType"
:
"CONTACT"
,
25
"associationIdentifierColumn"
:
false
26
},
27
{
28
"ignored"
:
false
,
29
"columnName"
:
"Email"
,
30
"idColumnType"
:
"HUBSPOT_ALTERNATE_ID"
,
31
"propertyName"
:
"email"
,
32
"foreignKeyType"
:
null
,
33
"columnObjectType"
:
"CONTACT"
,
34
"associationIdentifierColumn"
:
false
35
},
36
{
37
"ignored"
:
false
,
38
"columnName"
:
"Company ID"
,
39
"idColumnType"
:
"HUBSPOT_OBJECT_ID"
,
40
"propertyName"
:
null
,
41
"foreignKeyType"
: {
42
"associationCategory"
:
"HUBSPOT_DEFINED"
,
43
"associationTypeId"
:
1
44
},
45
"columnObjectType"
:
"CONTACT"
,
46
"associationIdentifierColumn"
:
false
47
}
48
]
49
}
50
}
51
]
52
}
Please note:
if you receive an error, check if there are any duplicate headers, such as
Content-Type
. This may occur if you're using Postman or if it's included in the header of your Python script. Remove the duplicate before completing the request.
Limits
When using the imports API, you can import up to 80,000,000 rows per day. However, individual import files are limited to 1,048,576 rows or 512 MB, whichever is reached first.
If your request exceeds either the row or size limit, HubSpot will respond with a 429 HTTP error. When approaching these limits, it's recommended to split your import into multiple requests.
Share your feedback
Was this article helpful?
Yes
No
This form is used for documentation feedback only. Learn how to
get help with HubSpot
Developer Home
HubSpot Developer Documentation home
Copyright © 2024 HubSpot, Inc.
Legal Stuff
Privacy Policy
Manage Cookies
Toggle menu
API Guides
Overview
Analytics and events
App management
Automation
CMS
Conversations
Library
CRM
Understanding the CRM
Using object APIs
Associations
Commerce
Engagements
Extensions
Export CRM data
Import CRM data
Lists
Objects
CRM embed
Owners
Pipelines
Properties
Search
Limits tracking
Object library
Marketing
Settings
Legal