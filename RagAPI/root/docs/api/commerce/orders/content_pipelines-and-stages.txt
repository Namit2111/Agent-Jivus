CRM API | Orders | HubSpot
×
close
We use cookies to improve HubSpot’s site. Some cookies are necessary for our website and services to function properly. Other cookies are optional and help personalize your experience, including advertising and analytics. You can consent to all cookies, decline all optional cookies, or manage optional cookies. Without a selection, our default cookie settings will apply. You can change your preferences at any time. To learn more, check out our
Cookie Policy
.
Accept all
Decline all
Manage cookies
Skip to main content
HubSpot logo
Open site navigation
Getting Started
Overview
What to build
Tools to help you build
Account types
Guides
API & Reference
API Endpoints
CMS Reference
UI Components
(Beta)
Search
Select a language
English
My account
API Guides
Apps
CMS Development
UI Customization
(Beta)
On this page
Create orders
Properties
Associations
Retrieve orders
Search for orders by properties
Retrieve an order with associations
Update orders
Order properties
Pipelines and stages
API Guides
CRM
Commerce
CRM API | Orders
Orders
Orders endpoint reference
Use the orders API to create and manage data related to ecommerce purchases in HubSpot. This can be especially useful for keeping HubSpot data synced with external ecommerce platforms, such as Shopify and NetSuite.
For example, when a buyer adds a set of products to their cart and makes a purchase, store that purchase as an individual order. You can then update that order with tracking information once the shipping label has been printed. Because this information is stored in a property, you can reference it in emails that you send to notify customers that their package is on the way.
Create orders
To create an order, make a
POST
request to
crm/v3/objects/order
.
In the request body, you can include the
properties
and
associations
objects to set property values and associate the order with other CRM objects (e.g., contacts and line items). Learn more about order properties and associations below.
Properties
Order details are stored in order properties. HubSpot provides a set of
default order properties
, but you can also create your own custom properties using the
properties API
.
To include properties when creating an order, add them as fields in a
properties
object in the request body. For example, the request body below would create an order with some basic order and shipping details based on the information provided by the buyer at checkout.
Copy code snippet
// Example POST request body
{
"properties": {
"hs_order_name": "Camping supplies",
"hs_currency_code": "USD",
"hs_source_store": "REI - Portland",
"hs_fulfillment_status": "Packing",
"hs_shipping_address_city": "Portland",
"hs_shipping_address_state": "Maine",
"hs_shipping_address_street": "123 Fake Street"
}
}
1
// Example POST request body
2
{
3
"properties"
: {
4
"hs_order_name"
:
"Camping supplies"
,
5
"hs_currency_code"
:
"USD"
,
6
"hs_source_store"
:
"REI - Portland"
,
7
"hs_fulfillment_status"
:
"Packing"
,
8
"hs_shipping_address_city"
:
"Portland"
,
9
"hs_shipping_address_state"
:
"Maine"
,
10
"hs_shipping_address_street"
:
"123 Fake Street"
11
}
12
}
The response will include the information you provided during creation along with a few other default properties.
Copy code snippet
// Example response
{
"id": "54805205097",
"properties": {
"hs_created_by_user_id": "959199",
"hs_createdate": "2024-03-27T18:04:11.823Z",
"hs_currency_code": "USD",
"hs_exchange_rate": "1.0",
"hs_fulfillment_status": "Packing",
"hs_lastmodifieddate": "2024-03-27T18:04:11.823Z",
"hs_object_id": "54805205097",
"hs_object_source": "CRM_UI",
"hs_object_source_id": "userId:959199",
"hs_object_source_label": "CRM_UI",
"hs_object_source_user_id": "959199",
"hs_order_name": "Camping supplies",
"hs_shipping_address_city": "Portland",
"hs_shipping_address_state": "Maine",
"hs_shipping_address_street": "123 Fake Street",
"hs_source_store": "REI - Portland",
"hs_updated_by_user_id": "959199"
},
"createdAt": "2024-03-27T18:04:11.823Z",
"updatedAt": "2024-03-27T18:04:11.823Z",
"archived": false
}
xxxxxxxxxx
26
1
// Example response
2
{
3
"id"
:
"54805205097"
,
4
"properties"
: {
5
"hs_created_by_user_id"
:
"959199"
,
6
"hs_createdate"
:
"2024-03-27T18:04:11.823Z"
,
7
"hs_currency_code"
:
"USD"
,
8
"hs_exchange_rate"
:
"1.0"
,
9
"hs_fulfillment_status"
:
"Packing"
,
10
"hs_lastmodifieddate"
:
"2024-03-27T18:04:11.823Z"
,
11
"hs_object_id"
:
"54805205097"
,
12
"hs_object_source"
:
"CRM_UI"
,
13
"hs_object_source_id"
:
"userId:959199"
,
14
"hs_object_source_label"
:
"CRM_UI"
,
15
"hs_object_source_user_id"
:
"959199"
,
16
"hs_order_name"
:
"Camping supplies"
,
17
"hs_shipping_address_city"
:
"Portland"
,
18
"hs_shipping_address_state"
:
"Maine"
,
19
"hs_shipping_address_street"
:
"123 Fake Street"
,
20
"hs_source_store"
:
"REI - Portland"
,
21
"hs_updated_by_user_id"
:
"959199"
22
},
23
"createdAt"
:
"2024-03-27T18:04:11.823Z"
,
24
"updatedAt"
:
"2024-03-27T18:04:11.823Z"
,
25
"archived"
:
false
26
}
Associations
You can associate the order with other HubSpot CRM objects at creation by including an
associations
array. You can also use the
associations API
to update existing orders after creation.
In the
associations
array, include an object for each associated record using the following fields:
Fields
Type
Description
toObjectId
String
The ID of the record that you want to associate the order with.
associationTypeId
String
A unique identifier to indicate the association type between the order and the other object. Below are the CRM objects that you can associate orders with, along with their
associationTypeId
:
Carts
:
593
Contacts
:
507
Companies
:
509
Deals
:
512
Discounts
:
519
Discount codes
:
521
Invoices
:
518
Line items
:
513
Payments
:
523
Quotes
:
730
Subscriptions
:
516
Tasks
:
726
Tickets
:
525
To see a list of all association types, check out the
associations API documentation
. Or, you can retrieve each value by making a
GET
request to
/crm/v4/associations/{fromObjectType}/{toObjectType}/labels
.
For example, the
POST
request body below would create an order that's associated with a specific contact and two line items. Properties are also included below the associations for setting initial order information.
Copy code snippet
// Example request body
{
"associations": [
{
"to": {
"id": 301
},
"types": [
{
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 507
}
]
},
{
"to": {
"id": 1243313490
},
"types": [
{
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 513
}
]
},
{
"to": {
"id": 1243557166
},
"types": [
{
"associationCategory": "HUBSPOT_DEFINED",
"associationTypeId": 513
}
]
}
],
"properties": {
"hs_order_name": "Associated order",
"hs_currency_code": "USD",
"hs_source_store": "REI - Portland",
"hs_fulfillment_status": "Packing",
"hs_shipping_address_city": "Portland",
"hs_shipping_address_state": "Maine",
"hs_shipping_address_street": "123 Fake Street"
}
}
xxxxxxxxxx
47
1
// Example request body
2
{
3
"associations"
: [
4
{
5
"to"
: {
6
"id"
:
301
7
},
8
"types"
: [
9
{
10
"associationCategory"
:
"HUBSPOT_DEFINED"
,
11
"associationTypeId"
:
507
12
}
13
]
14
},
15
{
16
"to"
: {
17
"id"
:
1243313490
18
},
19
"types"
: [
20
{
21
"associationCategory"
:
"HUBSPOT_DEFINED"
,
22
"associationTypeId"
:
513
23
}
24
]
25
},
26
{
27
"to"
: {
28
"id"
:
1243557166
29
},
30
"types"
: [
31
{
32
"associationCategory"
:
"HUBSPOT_DEFINED"
,
33
"associationTypeId"
:
513
34
}
35
]
36
}
37
],
38
"properties"
: {
39
"hs_order_name"
:
"Associated order"
,
40
"hs_currency_code"
:
"USD"
,
41
"hs_source_store"
:
"REI - Portland"
,
42
"hs_fulfillment_status"
:
"Packing"
,
43
"hs_shipping_address_city"
:
"Portland"
,
44
"hs_shipping_address_state"
:
"Maine"
,
45
"hs_shipping_address_street"
:
"123 Fake Street"
46
}
47
}
Retrieve orders
Depending on the information you need, there are a few ways to retrieve orders:
To retrieve all orders, make a
GET
request to
/crm/v3/objects/order
.
To retrieve a specific order, make a
GET
request to the above URL and specify an order ID. For example:
/crm/v3/objects/order/44446244097
.
To retrieve orders that meet a specific set of criteria, you can make a
POST
request to the search endpoint and include filters in the request body. Learn more about
searching the CRM
.
The response will include a few default properties, including the create date, last modified date.
Copy code snippet
// Example response
{
"results": [
{
"id": "54767113310",
"properties": {
"hs_createdate": "2024-03-26T20:02:34.935Z",
"hs_lastmodifieddate": "2024-03-26T20:02:48.278Z",
"hs_object_id": "54767113310"
},
"createdAt": "2024-03-26T20:02:34.935Z",
"updatedAt": "2024-03-26T20:02:48.278Z",
"archived": false
},
{
"id": "54804869149",
"properties": {
"hs_createdate": "2024-03-27T17:39:16.122Z",
"hs_lastmodifieddate": "2024-03-27T17:39:16.122Z",
"hs_object_id": "54804869149"
},
"createdAt": "2024-03-27T17:39:16.122Z",
"updatedAt": "2024-03-27T17:39:16.122Z",
"archived": false
}
]
}
xxxxxxxxxx
27
1
// Example response
2
{
3
"results"
: [
4
{
5
"id"
:
"54767113310"
,
6
"properties"
: {
7
"hs_createdate"
:
"2024-03-26T20:02:34.935Z"
,
8
"hs_lastmodifieddate"
:
"2024-03-26T20:02:48.278Z"
,
9
"hs_object_id"
:
"54767113310"
10
},
11
"createdAt"
:
"2024-03-26T20:02:34.935Z"
,
12
"updatedAt"
:
"2024-03-26T20:02:48.278Z"
,
13
"archived"
:
false
14
},
15
{
16
"id"
:
"54804869149"
,
17
"properties"
: {
18
"hs_createdate"
:
"2024-03-27T17:39:16.122Z"
,
19
"hs_lastmodifieddate"
:
"2024-03-27T17:39:16.122Z"
,
20
"hs_object_id"
:
"54804869149"
21
},
22
"createdAt"
:
"2024-03-27T17:39:16.122Z"
,
23
"updatedAt"
:
"2024-03-27T17:39:16.122Z"
,
24
"archived"
:
false
25
}
26
]
27
}
To return specific properties, include a
properties
query parameter in the request URL along with comma-separated property names. For example, making a
GET
request to the following URL would result in the response below:
/crm/v3/objects/order?properties=hs_order_name,hs_source_store
Copy code snippet
// Example response
{
"id": "54767113310",
"properties": {
"hs_createdate": "2024-03-26T20:02:34.935Z",
"hs_lastmodifieddate": "2024-03-27T18:50:07.678Z",
"hs_object_id": "54767113310",
"hs_order_name": "Test API order 2",
"hs_source_store": "REI - Portland"
},
"createdAt": "2024-03-26T20:02:34.935Z",
"updatedAt": "2024-03-27T18:50:07.678Z",
"archived": false
}
xxxxxxxxxx
14
1
// Example response
2
{
3
"id"
:
"54767113310"
,
4
"properties"
: {
5
"hs_createdate"
:
"2024-03-26T20:02:34.935Z"
,
6
"hs_lastmodifieddate"
:
"2024-03-27T18:50:07.678Z"
,
7
"hs_object_id"
:
"54767113310"
,
8
"hs_order_name"
:
"Test API order 2"
,
9
"hs_source_store"
:
"REI - Portland"
10
},
11
"createdAt"
:
"2024-03-26T20:02:34.935Z"
,
12
"updatedAt"
:
"2024-03-27T18:50:07.678Z"
,
13
"archived"
:
false
14
}
To view all available order properties, you can query the
properties API
by making a
GET
request to
crm/v3/properties/order
.
Learn more about
order properties
.
Search for orders by properties
You can use the search endpoint to retrieve orders that meet a specific set of
filter criteria
. This will be a
POST
request that includes your filter criteria in the request body.
For example, to search for all orders placed at a specific store, you would make a
POST
request to
crm/v3/objects/order/search
with the following request body:
Copy code snippet
// Example search request body
{
"filterGroups": [
{
"filters": [
{
"propertyName": "hs_source_store",
"value": "REI - Portland",
"operator": "EQ"
}
]
}
],
"properties": ["hs_order_name", "hs_source_store"]
}
xxxxxxxxxx
15
1
// Example search request body
2
{
3
"filterGroups"
: [
4
{
5
"filters"
: [
6
{
7
"propertyName"
:
"hs_source_store"
,
8
"value"
:
"REI - Portland"
,
9
"operator"
:
"EQ"
10
}
11
]
12
}
13
],
14
"properties"
: [
"hs_order_name"
,
"hs_source_store"
]
15
}
Retrieve an order with associations
To retrieve an order along with its associations, make a
GET
request to
crm/v3/objects/order/{orderId}/associations/{objectName}
For example, to retrieve an order and its associated contacts, you would use the following URL:
crm/v3/objects/order/{orderId}/associations/contact
This will return the IDs of the currently associated contacts, along with meta information about the association type.
Copy code snippet
// Example response
{
"results": [
{
"id": "301",
"type": "order_to_contact"
},
{
"id": "1196316844",
"type": "order_to_contact"
}
]
}
xxxxxxxxxx
13
1
// Example response
2
{
3
"results"
: [
4
{
5
"id"
:
"301"
,
6
"type"
:
"order_to_contact"
7
},
8
{
9
"id"
:
"1196316844"
,
10
"type"
:
"order_to_contact"
11
}
12
]
13
}
You could then use the returned IDs to request more information about the contacts through the
contacts API
. For example, you could retrieve the contact using its ID by making a
GET
request to
crm/v3/objects/contacts/{contactId}
.
Copy code snippet
// Example response
{
"id": "301",
"properties": {
"createdate": "2022-09-27T13:13:31.004Z",
"email": "tom.bombadil@oldforest.com",
"firstname": "Tom",
"hs_object_id": "301",
"lastmodifieddate": "2023-11- 07T17:14:00.841Z",
"lastname": "Bombadil"
},
"createdAt": "2022-09-27T13:13:31.004Z",
"updatedAt": "2023-11-07T17:14:00.841Z",
"archived": false
}
xxxxxxxxxx
15
1
// Example response
2
{
3
"id"
:
"301"
,
4
"properties"
: {
5
"createdate"
:
"2022-09-27T13:13:31.004Z"
,
6
"email"
:
"tom.bombadil@oldforest.com"
,
7
"firstname"
:
"Tom"
,
8
"hs_object_id"
:
"301"
,
9
"lastmodifieddate"
:
"2023-11- 07T17:14:00.841Z"
,
10
"lastname"
:
"Bombadil"
11
},
12
"createdAt"
:
"2022-09-27T13:13:31.004Z"
,
13
"updatedAt"
:
"2023-11-07T17:14:00.841Z"
,
14
"archived"
:
false
15
}
Note that the
filters
array specifies the search criteria, while the
properties
array specifies which properties to return.
Update orders
To update an order, make a
PATCH
request to
/crm/v3/objects/order/{orderId}
. In the request body, include a
properties
object containing the properties that you want to update.
For example, if you wanted to update an order with the shipping tracking number, you could send the following request body:
Copy code snippet
// Example request body
{
"properties": {
"hs_shipping_tracking_number": "123098521091"
}
}
xxxxxxxxxx
6
1
// Example request body
2
{
3
"properties"
: {
4
"hs_shipping_tracking_number"
:
"123098521091"
5
}
6
}
The response will include a set of default properties along with the property that you just set.
Copy code snippet
// Example response
{
"id": "54767113310",
"properties": {
"hs_created_by_user_id": "959199",
"hs_createdate": "2024-03-26T20:02:34.935Z",
"hs_lastmodifieddate": "2024-03-27T20:03:05.890Z",
"hs_object_id": "54767113310",
"hs_shipping_tracking_number": "123098521091",
"hs_updated_by_user_id": "959199"
},
"createdAt": "2024-03-26T20:02:34.935Z",
"updatedAt": "2024-03-27T20:03:05.890Z",
"archived": false
}
xxxxxxxxxx
15
1
// Example response
2
{
3
"id"
:
"54767113310"
,
4
"properties"
: {
5
"hs_created_by_user_id"
:
"959199"
,
6
"hs_createdate"
:
"2024-03-26T20:02:34.935Z"
,
7
"hs_lastmodifieddate"
:
"2024-03-27T20:03:05.890Z"
,
8
"hs_object_id"
:
"54767113310"
,
9
"hs_shipping_tracking_number"
:
"123098521091"
,
10
"hs_updated_by_user_id"
:
"959199"
11
},
12
"createdAt"
:
"2024-03-26T20:02:34.935Z"
,
13
"updatedAt"
:
"2024-03-27T20:03:05.890Z"
,
14
"archived"
:
false
15
}
To update the associations for an existing order, make a
PUT
request to
/crm/v3/objects/order/{orderId}/associations/{toObjectType}/{toObjectId}/{associationTypeId}
. You can also use the
associations API
.
See the
associations section
for
associationTypeId
values for order-to-object associations. You can also make a
GET
request to
/crm/v4/associations/{fromObjectType}/{toObjectType}/labels
.
To see all a list of all values, check out the
associations API documentation
.
For example, to associate an existing order with an existing payment, you would make a
PUT
request to the following URL:
/crm/v3/objects/order/{orderId}/associations/commerce_payments/{paymentId}/523
The response will return a set of default properties along with an
associations
object containing information about the association that you set.
Copy code snippet
// Example response
{
"id": "54767113310",
"properties": {
"hs_createdate": "2024-03-26T20:02:34.935Z",
"hs_lastmodifieddate": "2024-03-27T20:03:05.890Z",
"hs_object_id": "54767113310"
},
"createdAt": "2024-03-26T20:02:34.935Z",
"updatedAt": "2024-03-27T20:03:05.890Z",
"archived": false,
"associations": {
"payments": {
"results": [
{
"id": "50927296322",
"type": "order_to_commerce_payment"
}
]
}
}
}
xxxxxxxxxx
22
1
// Example response
2
{
3
"id"
:
"54767113310"
,
4
"properties"
: {
5
"hs_createdate"
:
"2024-03-26T20:02:34.935Z"
,
6
"hs_lastmodifieddate"
:
"2024-03-27T20:03:05.890Z"
,
7
"hs_object_id"
:
"54767113310"
8
},
9
"createdAt"
:
"2024-03-26T20:02:34.935Z"
,
10
"updatedAt"
:
"2024-03-27T20:03:05.890Z"
,
11
"archived"
:
false
,
12
"associations"
: {
13
"payments"
: {
14
"results"
: [
15
{
16
"id"
:
"50927296322"
,
17
"type"
:
"order_to_commerce_payment"
18
}
19
]
20
}
21
}
22
}
To remove an association from an existing order, make a
DELETE
request to the following URL:
/crm/v3/objects/order/{orderId}/associations/{toObjectType}/{toObjectId}/{associationTypeId}
For example, if you wanted to remove an associated payment from an order, your request URL would be the following:
/crm/v3/objects/order/{orderId}/associations/commerce_payments/{paymentId}/523
Order properties
When managing your order data, you may want to use some of the common properties in the table below. To get all order properties, make a
GET
request to
/crm/v3/properties/order
. Learn more about using the
properties API
.
Property name
Label in UI
Description
hs_order_name
Name
The name of the order.
hs_currency_code
Currency Code
The currency that the order was placed in.
hs_source_store
Source Store
The store that that the order came from.
hs_fulfillment_status
Fulfillment Status
The current fulfillment / shipping status of the order.
hs_shipping_status_url
Shipping Status URL
A URL for tracking the shipment status.
hs_shipping_tracking_number
Shipping Tracking Number
The tracking number for shipping.
hs_shipping_address_street
Shipping Street
The street address for shipping.
hs_shipping_address_city
Shipping City
The city in the shipping address.
hs_shipping_address_postal_code
Shipping ZIP/Postal Code
The zip code of the shipping address.
hs_pipeline
Pipeline
The pipeline that the order is in. Pipelines contain stages for tracking the order's progress. Learn more about
pipelines and stages
below.
hs_pipeline_stage
Stage
The order's progress within its current pipeline. Learn more about
pipelines and stages
below.
Pipelines and stages
To track an order's progress, you can create pipelines with defined stages for each step of the fulfillment process. For example, you could create a pipeline for online orders with stages for when the order has been opened, paid, processed, shipped, cancelled, and refunded.
Using the
pipelines API
, you can create an order pipeline by making a
POST
request to
crm/v3/pipelines/order
. In the request body, you'll include a
label
for the pipeline,
displayOrder
for the display in HubSpot, and a
stages
array with objects for each stage.
Copy code snippet
// Example request body
{
"label": "Online orders",
"displayOrder": 0,
"stages": [
{
"label": "Open",
"displayOrder": 0,
"metadata": {
"state": "OPEN"
}
},
{
"label": "Paid",
"displayOrder": 1,
"metadata": {
"state": "OPEN"
}
},
{
"label": "Processed",
"displayOrder": 2,
"metadata": {
"state": "OPEN"
}
},
{
"label": "Shipped",
"displayOrder": 3,
"metadata": {
"state": "CLOSED"
}
},
{
"label": "Cancelled",
"displayOrder": 4,
"metadata": {
"state": "CLOSED"
}
},
{
"label": "Refunded",
"displayOrder": 5,
"metadata": {
"state": "CLOSED"
}
}
]
}
xxxxxxxxxx
49
1
// Example request body
2
{
3
"label"
:
"Online orders"
,
4
"displayOrder"
:
0
,
5
"stages"
: [
6
{
7
"label"
:
"Open"
,
8
"displayOrder"
:
0
,
9
"metadata"
: {
10
"state"
:
"OPEN"
11
}
12
},
13
{
14
"label"
:
"Paid"
,
15
"displayOrder"
:
1
,
16
"metadata"
: {
17
"state"
:
"OPEN"
18
}
19
},
20
{
21
"label"
:
"Processed"
,
22
"displayOrder"
:
2
,
23
"metadata"
: {
24
"state"
:
"OPEN"
25
}
26
},
27
{
28
"label"
:
"Shipped"
,
29
"displayOrder"
:
3
,
30
"metadata"
: {
31
"state"
:
"CLOSED"
32
}
33
},
34
{
35
"label"
:
"Cancelled"
,
36
"displayOrder"
:
4
,
37
"metadata"
: {
38
"state"
:
"CLOSED"
39
}
40
},
41
{
42
"label"
:
"Refunded"
,
43
"displayOrder"
:
5
,
44
"metadata"
: {
45
"state"
:
"CLOSED"
46
}
47
}
48
]
49
}
Parameter
Type
Description
label
String
The pipeline's label as it should appear in HubSpot.
displayOrder
Number
The order for displaying the pipeline in HubSpot. If two pipelines have a matching
displayOrder
, they will be sorted alphabetically by label.
stages
Array
An array containing the pipeline stages. Each stage is an object containing the following fields:
label
: the stage's label as it should appear in HubSpot.
displayOrder
: the order in which the stage will appear in HubSpot.
metadata
: configures whether the stage is in progress (
OPEN
) or complete (
CLOSED
) using the
state
field.
Share your feedback
Was this article helpful?
Yes
No
This form is used for documentation feedback only. Learn how to
get help with HubSpot
Developer Home
HubSpot Developer Documentation home
Copyright © 2024 HubSpot, Inc.
Legal Stuff
Privacy Policy
Manage Cookies
Toggle menu
API Guides
Overview
Analytics and events
App management
Automation
CMS
Conversations
Library
CRM
Understanding the CRM
Using object APIs
Associations
Commerce
Carts
Discounts
Fees
Invoices
Orders
Quotes
Taxes
Payments
Subscriptions
Engagements
Extensions
Export CRM data
Import CRM data
Lists
Objects
CRM embed
Owners
Pipelines
Properties
Search
Object Library
Marketing
Settings
Legal