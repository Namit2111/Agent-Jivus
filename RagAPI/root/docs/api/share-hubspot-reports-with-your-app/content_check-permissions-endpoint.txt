Use your installed app to share HubSpot reports to channels and users (BETA) | HubSpot
×
close
We use cookies to improve HubSpot’s site. Some cookies are necessary for our website and services to function properly. Other cookies are optional and help personalize your experience, including advertising and analytics. You can consent to all cookies, decline all optional cookies, or manage optional cookies. Without a selection, our default cookie settings will apply. You can change your preferences at any time. To learn more, check out our
Cookie Policy
.
Accept all
Decline all
Manage cookies
Skip to main content
HubSpot logo
Open site navigation
Getting Started
Overview
What to build
Tools to help you build
Account types
Guides
API & Reference
API Endpoints
CMS Reference
UI Components
(Beta)
Search
Select a language
English
My account
API Guides
Apps
CMS Development
UI Customization
(Beta)
On this page
Set up the Share With feature
Check permissions endpoint
Fetch recipients endpoint
Fetch recipient endpoint
Share object endpoint
Test the functionality
Apps
Public apps
Use your installed app to share HubSpot reports to channels and users (BETA)
Use your installed app to share HubSpot reports to channels and users
Learn how to set up the
Share With
feature to allow your public app to share HubSpot reports and recurring updates to specific channels and users. This means you'll be able to
share your HubSpot reports and dashboards
with the installed app. This feature is only available for
public apps
.
Set up the Share With feature
Before you set up your app to use the
Share With
feature, you'll need to create and host four API endpoints that will accept
POST
requests from HubSpot when a customer who has installed your app shares their HubSpot reports and dashboards.
You'll need to set up the following endpoints to handle the four webhook event triggers:
CHECK_PERMISSIONS
FETCH_RECIPIENTS
FETCH_RECIPIENT
SHARE_OBJECT
Requests are sent with the HubSpot Signature. To ensure that the requests that are received are from HubSpot, they can be validated using the signature:
https://developers.hubspot.com/docs/api/webhooks/validating-requests
Check permissions endpoint
The URL of the endpoint that returns account data should be structured like
https://BASE_PATH_OF_YOUR_SERVICE/feature/SHARE_VIA/event/CHECK_PERMISSIONS
.
HubSpot will provide the following fields in the body of the request:
JSON
JSON
More
Copy code snippet
// Example request body that HubSpot will send your hosted service
{
"portalId": 10,
"appId": 20,
"payload": {
"requiredPermissions": ["upload-file"]
}
}
1
// Example request body that HubSpot will send your hosted service
2
{
3
"portalId"
:
10
,
4
"appId"
:
20
,
5
"payload"
: {
6
"requiredPermissions"
: [
"upload-file"
]
7
}
8
}
The response you return when HubSpot makes a POST request to the endpoint should be a JSON-formatted object with the following fields:
JSON
JSON
More
Copy code snippet
// Example response you should return after a POST request from HubSpot
{
"portalId": 10,
"appId": 20,
"eventType": "CHECK_PERMISSIONS",
"payload": {
"hasAllRequiredPermissions": true
}
}
xxxxxxxxxx
9
1
// Example response you should return after a POST request from HubSpot
2
{
3
"portalId"
:
10
,
4
"appId"
:
20
,
5
"eventType"
:
"CHECK_PERMISSIONS"
,
6
"payload"
: {
7
"hasAllRequiredPermissions"
:
true
8
}
9
}
Fetch recipients endpoint
The URL of the endpoint that returns account data should be structured like
https://BASE_PATH_OF_YOUR_SERVICE/feature/SHARE_VIA/event/FETCH_RECIPIENTS
.
HubSpot will provide the following fields in the body of the request:
JSON
JSON
More
Copy code snippet
{
"portalId": 10,
"appId": 20,
"payload": {
"recipientsFilter": {
"type": 1, // integer: 0 for Channel or 1 for User
"name": "Recipient" // substring which denotes filtering by name
},
"limit": 5,
"nextPageAfter": "hashkey" //string hashkey to denote the next page
}
}
xxxxxxxxxx
12
1
{
2
"portalId"
:
10
,
3
"appId"
:
20
,
4
"payload"
: {
5
"recipientsFilter"
: {
6
"type"
:
1
,
// integer: 0 for Channel or 1 for User
7
"name"
:
"Recipient"
// substring which denotes filtering by name
8
},
9
"limit"
:
5
,
10
"nextPageAfter"
:
"hashkey"
//string hashkey to denote the next page
11
}
12
}
The response you return when HubSpot makes a POST request to the endpoint should be a JSON-formatted object with the following fields:
JSON
JSON
More
Copy code snippet
{
"portalId": 10,
"appId": 20,
"eventType": "FETCH_RECIPIENTS",
"payload": {
"recipients": {
"total": 2,
"results": [
{
"id": "R2",
"name": "Recipient Two",
"type": 1
},
{
"id": "R4",
"name": "Recipient Four",
"type": 1
}
]
}
}
}
xxxxxxxxxx
22
1
{
2
"portalId"
:
10
,
3
"appId"
:
20
,
4
"eventType"
:
"FETCH_RECIPIENTS"
,
5
"payload"
: {
6
"recipients"
: {
7
"total"
:
2
,
8
"results"
: [
9
{
10
"id"
:
"R2"
,
11
"name"
:
"Recipient Two"
,
12
"type"
:
1
13
},
14
{
15
"id"
:
"R4"
,
16
"name"
:
"Recipient Four"
,
17
"type"
:
1
18
}
19
]
20
}
21
}
22
}
Fetch recipient endpoint
The URL of the endpoint that returns account data should be structured like
https://BASE_PATH_OF_YOUR_SERVICE/feature/SHARE_VIA/event/FETCH_RECIPIENT
.
HubSpot will provide the following fields in the body of the request:
JSON
JSON
More
Copy code snippet
{
"portalId": 10,
"appId": 20,
"payload": {
"id": "R3",
"type": 0
}
}
xxxxxxxxxx
8
1
{
2
"portalId"
:
10
,
3
"appId"
:
20
,
4
"payload"
: {
5
"id"
:
"R3"
,
6
"type"
:
0
7
}
8
}
The response you return when HubSpot makes a
POST
request to the endpoint should be a JSON-formatted object with the following fields:
JSON
JSON
More
Copy code snippet
{
"portalId": 0,
"appId": 0,
"eventType": "FETCH_RECIPIENT",
"payload": {
"recipient": {
"id": "R3",
"name": "Recipient Three",
"type": 0
}
}
}
xxxxxxxxxx
12
1
{
2
"portalId"
:
0
,
3
"appId"
:
0
,
4
"eventType"
:
"FETCH_RECIPIENT"
,
5
"payload"
: {
6
"recipient"
: {
7
"id"
:
"R3"
,
8
"name"
:
"Recipient Three"
,
9
"type"
:
0
10
}
11
}
12
}
Share object endpoint
The URL of the endpoint that returns account data should be structured like
https://BASE_PATH_OF_YOUR_SERVICE/feature/SHARE_VIA/event/SHARE_OBJECT
.
HubSpot will provide the following fields in the body of the request:
JSON
JSON
More
Copy code snippet
{
"portalId": 10,
"appId": 20,
"payload": {
"sender": {
"id": 2387654 // HubSpot Id of sender
},
"recipient": {
"id": "R3",
"name": "Recipient Three",
"type": 0
},
"message": "New report for this week",
"objectMetadata": {
"id": 2334567,
"type": 2, // integer denotes Type of Object: 2 for Report
"name": "Chat Conversations",
"screenshotUrl": "https://api-na1.hubspotqa.com/filemanager/api/signed-url-redirect?portalId=10"
}
}
}
xxxxxxxxxx
21
1
{
2
"portalId"
:
10
,
3
"appId"
:
20
,
4
"payload"
: {
5
"sender"
: {
6
"id"
:
2387654
// HubSpot Id of sender
7
},
8
"recipient"
: {
9
"id"
:
"R3"
,
10
"name"
:
"Recipient Three"
,
11
"type"
:
0
12
},
13
"message"
:
"New report for this week"
,
14
"objectMetadata"
: {
15
"id"
:
2334567
,
16
"type"
:
2
,
// integer denotes Type of Object: 2 for Report
17
"name"
:
"Chat Conversations"
,
18
"screenshotUrl"
:
"https://api-na1.hubspotqa.com/filemanager/api/signed-url-redirect?portalId=10"
19
}
20
}
21
}
The response you return when HubSpot makes a
POST
request to the endpoint should be a JSON-formatted object with the following fields:
JSON
JSON
More
Copy code snippet
{
"portalId": 10,
"appId": 20,
"eventType": "SHARE_OBJECT",
"payload": {
"recipientUrl": "https://example.com" //optional redirect URL
}
}
xxxxxxxxxx
8
1
{
2
"portalId"
:
10
,
3
"appId"
:
20
,
4
"eventType"
:
"SHARE_OBJECT"
,
5
"payload"
: {
6
"recipientUrl"
:
"https://example.com"
//optional redirect URL
7
}
8
}
Once you've set up your four endpoints, you can configure your app settings.
In your app developer account, navigate to
apps
in the main navigation bar.
Select the
app
.
In the left sidebar, click
More features
.
In the
Target URL
section, enter the
URL
that HubSpot will make a
POST
request to when events trigger. Or, use this testing URL:
https://api.hubspot.com/integration-components-example/v1/sample-app-webhooks/beta-app
Click to toggle the
Share via
switch on.
Click
Save
.
Test the functionality
After setting up your four endpoints and configuring your app settings, you can test this feature:
Install your app
.
In your HubSpot account, navigate to
Reporting & Data
>
Reports
.
Hover over a report and click the
Actions
dropdown menu. Then, click
Share Via
.
In the right panel, select the
connected app
and click
Next
.
Select the
frequency
of the message and which
channel or user
you're sending the report to.
Enter an
optional message
.
Click
Send now
.
Share your feedback
Was this article helpful?
Yes
No
This form is used for documentation feedback only. Learn how to
get help with HubSpot
Developer Home
HubSpot Developer Documentation home
Copyright © 2024 HubSpot, Inc.
Legal Stuff
Privacy Policy
Manage Cookies
Toggle menu
Apps
Overview
Authentication
Private apps
Public apps
Overview
Create generic webhook subscriptions
Beta
Create a settings page for a public app
Import users into any HubSpot account from an external app
Use your installed app to share HubSpot reports to channels and users
Extensions
API usage
Marketplace